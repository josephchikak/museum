module.exports = {

"[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/hooks/afterRead.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getAfterReadHook": (()=>getAfterReadHook)
});
const getAfterReadHook = ({ adapter, collection, disablePayloadAccessControl, generateFileURL, size })=>async ({ data, value })=>{
        const filename = size ? data?.sizes?.[size.name]?.filename : data?.filename;
        const prefix = data?.prefix;
        let url = value;
        if (disablePayloadAccessControl && filename) {
            url = await adapter.generateURL({
                collection,
                data,
                filename,
                prefix
            });
        }
        if (generateFileURL) {
            url = await generateFileURL({
                collection,
                filename,
                prefix,
                size
            });
        }
        return url;
    }; //# sourceMappingURL=afterRead.js.map
}}),
"[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/fields/getFields.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getFields": (()=>getFields)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (path, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$hooks$2f$afterRead$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/hooks/afterRead.js [app-route] (ecmascript)");
;
;
const getFields = ({ adapter, collection, disablePayloadAccessControl, generateFileURL, prefix })=>{
    const baseURLField = {
        name: 'url',
        type: 'text',
        admin: {
            hidden: true,
            readOnly: true
        },
        label: 'URL'
    };
    const basePrefixField = {
        name: 'prefix',
        type: 'text',
        admin: {
            hidden: true,
            readOnly: true
        }
    };
    const fields = [
        ...collection.fields,
        ...adapter.fields || []
    ];
    // Inject a hook into all URL fields to generate URLs
    let existingURLFieldIndex = -1;
    const existingURLField = fields.find((existingField, i)=>{
        if ('name' in existingField && existingField.name === 'url') {
            existingURLFieldIndex = i;
            return true;
        }
        return false;
    });
    if (existingURLFieldIndex > -1) {
        fields.splice(existingURLFieldIndex, 1);
    }
    fields.push({
        ...baseURLField,
        ...existingURLField || {},
        hooks: {
            afterRead: [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$hooks$2f$afterRead$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getAfterReadHook"])({
                    adapter,
                    collection,
                    disablePayloadAccessControl,
                    generateFileURL
                }),
                ...existingURLField?.hooks?.afterRead || []
            ]
        }
    });
    if (typeof collection.upload === 'object' && collection.upload.imageSizes) {
        let existingSizesFieldIndex = -1;
        const existingSizesField = fields.find((existingField, i)=>{
            if ('name' in existingField && existingField.name === 'sizes') {
                existingSizesFieldIndex = i;
                return true;
            }
            return false;
        });
        if (existingSizesFieldIndex > -1) {
            fields.splice(existingSizesFieldIndex, 1);
        }
        const sizesField = {
            ...existingSizesField || {},
            name: 'sizes',
            type: 'group',
            admin: {
                hidden: true
            },
            fields: collection.upload.imageSizes.map((size)=>{
                const existingSizeField = existingSizesField?.fields.find((existingField)=>'name' in existingField && existingField.name === size.name);
                const existingSizeURLField = existingSizeField?.fields.find((existingField)=>'name' in existingField && existingField.name === 'url');
                return {
                    ...existingSizeField,
                    name: size.name,
                    type: 'group',
                    fields: [
                        ...adapter.fields || [],
                        {
                            ...existingSizeURLField || {},
                            ...baseURLField,
                            hooks: {
                                afterRead: [
                                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$hooks$2f$afterRead$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getAfterReadHook"])({
                                        adapter,
                                        collection,
                                        disablePayloadAccessControl,
                                        generateFileURL,
                                        size
                                    }),
                                    ...existingSizeURLField?.hooks?.afterRead || []
                                ]
                            }
                        }
                    ]
                };
            })
        };
        fields.push(sizesField);
    }
    // If prefix is enabled, save it to db
    if (typeof prefix !== 'undefined') {
        let existingPrefixFieldIndex = -1;
        const existingPrefixField = fields.find((existingField, i)=>{
            if ('name' in existingField && existingField.name === 'prefix') {
                existingPrefixFieldIndex = i;
                return true;
            }
            return false;
        });
        if (existingPrefixFieldIndex > -1) {
            fields.splice(existingPrefixFieldIndex, 1);
        }
        fields.push({
            ...basePrefixField,
            ...existingPrefixField || {},
            defaultValue: __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["default"].posix.join(prefix)
        });
    }
    return fields;
}; //# sourceMappingURL=getFields.js.map
}}),
"[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/hooks/afterDelete.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getAfterDeleteHook": (()=>getAfterDeleteHook)
});
const getAfterDeleteHook = ({ adapter, collection })=>{
    return async ({ doc, req })=>{
        try {
            const filesToDelete = [
                doc.filename,
                ...Object.values(doc?.sizes || []).map((resizedFileData)=>resizedFileData?.filename)
            ];
            const promises = filesToDelete.map(async (filename)=>{
                if (filename) {
                    await adapter.handleDelete({
                        collection,
                        doc,
                        filename,
                        req
                    });
                }
            });
            await Promise.all(promises);
        } catch (err) {
            req.payload.logger.error({
                err,
                msg: `There was an error while deleting files corresponding to the ${collection.labels?.singular} with ID ${doc.id}.`
            });
        }
        return doc;
    };
}; //# sourceMappingURL=afterDelete.js.map
}}),
"[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/utilities/getIncomingFiles.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getIncomingFiles": (()=>getIncomingFiles)
});
function getIncomingFiles({ data, req }) {
    const file = req.file;
    let files = [];
    if (file && data.filename && data.mimeType) {
        const mainFile = {
            buffer: file.data,
            filename: data.filename,
            filesize: file.size,
            mimeType: data.mimeType,
            tempFilePath: file.tempFilePath
        };
        files = [
            mainFile
        ];
        if (data?.sizes) {
            Object.entries(data.sizes).forEach(([key, resizedFileData])=>{
                if (req.payloadUploadSizes?.[key] && data.mimeType) {
                    files = files.concat([
                        {
                            buffer: req.payloadUploadSizes[key],
                            filename: `${resizedFileData.filename}`,
                            filesize: req.payloadUploadSizes[key].length,
                            mimeType: data.mimeType
                        }
                    ]);
                }
            });
        }
    }
    return files;
} //# sourceMappingURL=getIncomingFiles.js.map
}}),
"[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/hooks/beforeChange.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getBeforeChangeHook": (()=>getBeforeChangeHook)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$utilities$2f$getIncomingFiles$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/utilities/getIncomingFiles.js [app-route] (ecmascript)");
;
const getBeforeChangeHook = ({ adapter, collection })=>async ({ data, originalDoc, req })=>{
        try {
            const files = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$utilities$2f$getIncomingFiles$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getIncomingFiles"])({
                data,
                req
            });
            if (files.length > 0) {
                // If there is an original doc,
                // And we have new files,
                // We need to delete the old files before uploading new
                if (originalDoc) {
                    let filesToDelete = [];
                    if (typeof originalDoc?.filename === 'string') {
                        filesToDelete.push(originalDoc.filename);
                    }
                    if (typeof originalDoc.sizes === 'object') {
                        filesToDelete = filesToDelete.concat(Object.values(originalDoc?.sizes || []).map((resizedFileData)=>resizedFileData?.filename));
                    }
                    const deletionPromises = filesToDelete.map(async (filename)=>{
                        if (filename) {
                            await adapter.handleDelete({
                                collection,
                                doc: originalDoc,
                                filename,
                                req
                            });
                        }
                    });
                    await Promise.all(deletionPromises);
                }
                const promises = files.map(async (file)=>{
                    await adapter.handleUpload({
                        collection,
                        data,
                        file,
                        req
                    });
                });
                await Promise.all(promises);
            }
        } catch (err) {
            req.payload.logger.error(`There was an error while uploading files corresponding to the collection ${collection.slug} with filename ${data.filename}:`);
            req.payload.logger.error({
                err
            });
            throw err;
        }
        return data;
    }; //# sourceMappingURL=beforeChange.js.map
}}),
"[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "cloudStoragePlugin": (()=>cloudStoragePlugin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$fields$2f$getFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/fields/getFields.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$hooks$2f$afterDelete$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/hooks/afterDelete.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$hooks$2f$beforeChange$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/hooks/beforeChange.js [app-route] (ecmascript)");
;
;
;
const cloudStoragePlugin = (pluginOptions)=>(incomingConfig)=>{
        const { collections: allCollectionOptions, enabled } = pluginOptions;
        const config = {
            ...incomingConfig
        };
        // Return early if disabled. Only webpack config mods are applied.
        if (enabled === false) {
            return config;
        }
        const initFunctions = [];
        return {
            ...config,
            collections: (config.collections || []).map((existingCollection)=>{
                const options = allCollectionOptions[existingCollection.slug];
                if (options?.adapter) {
                    const adapter = options.adapter({
                        collection: existingCollection,
                        prefix: options.prefix
                    });
                    if (adapter.onInit) {
                        initFunctions.push(adapter.onInit);
                    }
                    const fields = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$fields$2f$getFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getFields"])({
                        adapter,
                        collection: existingCollection,
                        disablePayloadAccessControl: options.disablePayloadAccessControl,
                        generateFileURL: options.generateFileURL,
                        prefix: options.prefix
                    });
                    const handlers = [
                        ...typeof existingCollection.upload === 'object' && Array.isArray(existingCollection.upload.handlers) ? existingCollection.upload.handlers : []
                    ];
                    if (!options.disablePayloadAccessControl) {
                        handlers.push(adapter.staticHandler);
                    }
                    return {
                        ...existingCollection,
                        fields,
                        hooks: {
                            ...existingCollection.hooks || {},
                            afterDelete: [
                                ...existingCollection.hooks?.afterDelete || [],
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$hooks$2f$afterDelete$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getAfterDeleteHook"])({
                                    adapter,
                                    collection: existingCollection
                                })
                            ],
                            beforeChange: [
                                ...existingCollection.hooks?.beforeChange || [],
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$hooks$2f$beforeChange$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getBeforeChangeHook"])({
                                    adapter,
                                    collection: existingCollection
                                })
                            ]
                        },
                        upload: {
                            ...typeof existingCollection.upload === 'object' ? existingCollection.upload : {},
                            adapter: adapter.name,
                            disableLocalStorage: typeof options.disableLocalStorage === 'boolean' ? options.disableLocalStorage : true,
                            handlers
                        }
                    };
                }
                return existingCollection;
            }),
            onInit: async (payload)=>{
                initFunctions.forEach((fn)=>fn());
                if (config.onInit) {
                    await config.onInit(payload);
                }
            }
        };
    }; //# sourceMappingURL=plugin.js.map
}}),
"[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$plugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/utilities/getFilePrefix.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getFilePrefix": (()=>getFilePrefix)
});
async function getFilePrefix({ collection, filename, req }) {
    const imageSizes = collection?.upload?.imageSizes || [];
    const files = await req.payload.find({
        collection: collection.slug,
        depth: 0,
        limit: 1,
        pagination: false,
        where: {
            or: [
                {
                    filename: {
                        equals: filename
                    }
                },
                ...imageSizes.map((imageSize)=>({
                        [`sizes.${imageSize.name}.filename`]: {
                            equals: filename
                        }
                    }))
            ]
        }
    });
    const prefix = files?.docs?.[0]?.prefix;
    return prefix ? prefix : '';
} //# sourceMappingURL=getFilePrefix.js.map
}}),
"[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/exports/utilities.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
 //# sourceMappingURL=utilities.js.map
}}),
"[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/exports/utilities.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$utilities$2f$getFilePrefix$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/utilities/getFilePrefix.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$exports$2f$utilities$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/exports/utilities.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/@payloadcms/storage-s3/dist/generateURL.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getGenerateURL": (()=>getGenerateURL)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (path, cjs)");
;
const getGenerateURL = ({ bucket, config: { endpoint } })=>({ filename, prefix = '' })=>{
        const stringifiedEndpoint = typeof endpoint === 'string' ? endpoint : endpoint?.toString();
        return `${stringifiedEndpoint}/${bucket}/${__TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["default"].posix.join(prefix, filename)}`;
    }; //# sourceMappingURL=generateURL.js.map
}}),
"[project]/node_modules/@payloadcms/storage-s3/dist/handleDelete.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getHandleDelete": (()=>getHandleDelete)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (path, cjs)");
;
const getHandleDelete = ({ bucket, getStorageClient })=>{
    return async ({ doc: { prefix = '' }, filename })=>{
        await getStorageClient().deleteObject({
            Bucket: bucket,
            Key: __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["default"].posix.join(prefix, filename)
        });
    };
}; //# sourceMappingURL=handleDelete.js.map
}}),
"[project]/node_modules/@payloadcms/storage-s3/dist/handleUpload.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getHandleUpload": (()=>getHandleUpload)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$lib$2d$storage$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@aws-sdk/lib-storage/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$fs$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (fs, cjs)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (path, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$lib$2d$storage$2f$dist$2d$es$2f$Upload$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@aws-sdk/lib-storage/dist-es/Upload.js [app-route] (ecmascript)");
;
;
;
const multipartThreshold = 1024 * 1024 * 50 // 50MB
;
const getHandleUpload = ({ acl, bucket, getStorageClient, prefix = '' })=>{
    return async ({ data, file })=>{
        const fileKey = __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["default"].posix.join(data.prefix || prefix, file.filename);
        const fileBufferOrStream = file.tempFilePath ? __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$fs$2c$__cjs$29$__["default"].createReadStream(file.tempFilePath) : file.buffer;
        if (file.buffer.length > 0 && file.buffer.length < multipartThreshold) {
            await getStorageClient().putObject({
                ACL: acl,
                Body: fileBufferOrStream,
                Bucket: bucket,
                ContentType: file.mimeType,
                Key: fileKey
            });
            return data;
        }
        const parallelUploadS3 = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$lib$2d$storage$2f$dist$2d$es$2f$Upload$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Upload"]({
            client: getStorageClient(),
            params: {
                ACL: acl,
                Body: fileBufferOrStream,
                Bucket: bucket,
                ContentType: file.mimeType,
                Key: fileKey
            },
            partSize: multipartThreshold,
            queueSize: 4
        });
        await parallelUploadS3.done();
        return data;
    };
}; //# sourceMappingURL=handleUpload.js.map
}}),
"[project]/node_modules/@payloadcms/storage-s3/dist/staticHandler.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getHandler": (()=>getHandler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$exports$2f$utilities$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/exports/utilities.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (path, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$utilities$2f$getFilePrefix$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/utilities/getFilePrefix.js [app-route] (ecmascript)");
;
;
// Convert a stream into a promise that resolves with a Buffer
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const streamToBuffer = async (readableStream)=>{
    const chunks = [];
    for await (const chunk of readableStream){
        chunks.push(typeof chunk === 'string' ? Buffer.from(chunk) : chunk);
    }
    return Buffer.concat(chunks);
};
const getHandler = ({ bucket, collection, getStorageClient })=>{
    return async (req, { params: { filename } })=>{
        try {
            const prefix = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$utilities$2f$getFilePrefix$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getFilePrefix"])({
                collection,
                filename,
                req
            });
            const object = await getStorageClient().getObject({
                Bucket: bucket,
                Key: __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["default"].posix.join(prefix, filename)
            });
            if (!object.Body) {
                return new Response(null, {
                    status: 404,
                    statusText: 'Not Found'
                });
            }
            const bodyBuffer = await streamToBuffer(object.Body);
            return new Response(bodyBuffer, {
                headers: new Headers({
                    'Accept-Ranges': String(object.AcceptRanges),
                    'Content-Length': String(object.ContentLength),
                    'Content-Type': String(object.ContentType),
                    ETag: String(object.ETag)
                }),
                status: 200
            });
        } catch (err) {
            req.payload.logger.error(err);
            return new Response('Internal Server Error', {
                status: 500
            });
        }
    };
}; //# sourceMappingURL=staticHandler.js.map
}}),
"[project]/node_modules/@payloadcms/storage-s3/dist/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "s3Storage": (()=>s3Storage)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$2840$aws$2d$sdk$2f$client$2d$s3$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (@aws-sdk/client-s3, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$dist$2f$generateURL$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/dist/generateURL.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$dist$2f$handleDelete$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/dist/handleDelete.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$dist$2f$handleUpload$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/dist/handleUpload.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$dist$2f$staticHandler$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/dist/staticHandler.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$plugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/storage-s3/node_modules/@payloadcms/plugin-cloud-storage/dist/plugin.js [app-route] (ecmascript)");
;
;
;
;
;
;
const s3Storage = (s3StorageOptions)=>(incomingConfig)=>{
        if (s3StorageOptions.enabled === false) {
            return incomingConfig;
        }
        const adapter = s3StorageInternal(s3StorageOptions);
        // Add adapter to each collection option object
        const collectionsWithAdapter = Object.entries(s3StorageOptions.collections).reduce((acc, [slug, collOptions])=>({
                ...acc,
                [slug]: {
                    ...collOptions === true ? {} : collOptions,
                    adapter
                }
            }), {});
        // Set disableLocalStorage: true for collections specified in the plugin options
        const config = {
            ...incomingConfig,
            collections: (incomingConfig.collections || []).map((collection)=>{
                if (!collectionsWithAdapter[collection.slug]) {
                    return collection;
                }
                return {
                    ...collection,
                    upload: {
                        ...typeof collection.upload === 'object' ? collection.upload : {},
                        disableLocalStorage: true
                    }
                };
            })
        };
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$node_modules$2f40$payloadcms$2f$plugin$2d$cloud$2d$storage$2f$dist$2f$plugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["cloudStoragePlugin"])({
            collections: collectionsWithAdapter
        })(config);
    };
function s3StorageInternal({ acl, bucket, config = {} }) {
    return ({ collection, prefix })=>{
        let storageClient = null;
        const getStorageClient = ()=>{
            if (storageClient) {
                return storageClient;
            }
            storageClient = new __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$2840$aws$2d$sdk$2f$client$2d$s3$2c$__cjs$29$__.S3(config);
            return storageClient;
        };
        return {
            name: 's3',
            generateURL: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$dist$2f$generateURL$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getGenerateURL"])({
                bucket,
                config
            }),
            handleDelete: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$dist$2f$handleDelete$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getHandleDelete"])({
                bucket,
                getStorageClient
            }),
            handleUpload: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$dist$2f$handleUpload$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getHandleUpload"])({
                acl,
                bucket,
                collection,
                getStorageClient,
                prefix
            }),
            staticHandler: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$storage$2d$s3$2f$dist$2f$staticHandler$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getHandler"])({
                bucket,
                collection,
                getStorageClient
            })
        };
    };
} //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/native.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$crypto$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (crypto, cjs)");
;
const __TURBOPACK__default__export__ = {
    randomUUID: __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].randomUUID
};
}}),
"[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/rng.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>rng)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$crypto$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (crypto, cjs)");
;
const rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate
let poolPtr = rnds8Pool.length;
function rng() {
    if (poolPtr > rnds8Pool.length - 16) {
        __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].randomFillSync(rnds8Pool);
        poolPtr = 0;
    }
    return rnds8Pool.slice(poolPtr, poolPtr += 16);
}
}}),
"[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/regex.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
const __TURBOPACK__default__export__ = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
}}),
"[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/validate.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$regex$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/regex.js [app-route] (ecmascript)");
;
function validate(uuid) {
    return typeof uuid === 'string' && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$regex$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].test(uuid);
}
const __TURBOPACK__default__export__ = validate;
}}),
"[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/stringify.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__),
    "unsafeStringify": (()=>unsafeStringify)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$validate$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/validate.js [app-route] (ecmascript)");
;
/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */ const byteToHex = [];
for(let i = 0; i < 256; ++i){
    byteToHex.push((i + 0x100).toString(16).slice(1));
}
function unsafeStringify(arr, offset = 0) {
    // Note: Be careful editing this code!  It's been tuned for performance
    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
    return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();
}
function stringify(arr, offset = 0) {
    const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one
    // of the following:
    // - One or more input array values don't map to a hex octet (leading to
    // "undefined" in the uuid)
    // - Invalid input values for the RFC `version` or `variant` fields
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$validate$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(uuid)) {
        throw TypeError('Stringified UUID is invalid');
    }
    return uuid;
}
const __TURBOPACK__default__export__ = stringify;
}}),
"[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/v4.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$native$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/native.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$rng$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/rng.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/stringify.js [app-route] (ecmascript)");
;
;
;
function v4(options, buf, offset) {
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$native$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].randomUUID && !buf && !options) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$native$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].randomUUID();
    }
    options = options || {};
    const rnds = options.random || (options.rng || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$rng$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
    rnds[6] = rnds[6] & 0x0f | 0x40;
    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided
    if (buf) {
        offset = offset || 0;
        for(let i = 0; i < 16; ++i){
            buf[offset + i] = rnds[i];
        }
        return buf;
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$stringify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["unsafeStringify"])(rnds);
}
const __TURBOPACK__default__export__ = v4;
}}),
"[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/v4.js [app-route] (ecmascript) <export default as v4>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({
    "v4": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$v4$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$v4$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/v4.js [app-route] (ecmascript)");
}}),
"[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/validate.js [app-route] (ecmascript) <export default as validate>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({
    "validate": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$validate$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$validate$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/node_modules/uuid/dist/esm-node/validate.js [app-route] (ecmascript)");
}}),
"[project]/node_modules/@payloadcms/translations/dist/languages/en.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "en": (()=>en),
    "enTranslations": (()=>enTranslations)
});
const enTranslations = {
    authentication: {
        account: 'Account',
        accountOfCurrentUser: 'Account of current user',
        accountVerified: 'Account verified successfully.',
        alreadyActivated: 'Already Activated',
        alreadyLoggedIn: 'Already logged in',
        apiKey: 'API Key',
        authenticated: 'Authenticated',
        backToLogin: 'Back to login',
        beginCreateFirstUser: 'To begin, create your first user.',
        changePassword: 'Change Password',
        checkYourEmailForPasswordReset: 'Check your email for a link that will allow you to securely reset your password.',
        confirmGeneration: 'Confirm Generation',
        confirmPassword: 'Confirm Password',
        createFirstUser: 'Create first user',
        emailNotValid: 'The email provided is not valid',
        emailOrUsername: 'Email or Username',
        emailSent: 'Email Sent',
        emailVerified: 'Email verified successfully.',
        enableAPIKey: 'Enable API Key',
        failedToUnlock: 'Failed to unlock',
        forceUnlock: 'Force Unlock',
        forgotPassword: 'Forgot Password',
        forgotPasswordEmailInstructions: 'Please enter your email below. You will receive an email message with instructions on how to reset your password.',
        forgotPasswordUsernameInstructions: 'Please enter your username below. Instructions on how to reset your password will be sent to email address associated with your username.',
        usernameNotValid: 'The username provided is not valid',
        forgotPasswordQuestion: 'Forgot password?',
        generate: 'Generate',
        generateNewAPIKey: 'Generate new API key',
        generatingNewAPIKeyWillInvalidate: 'Generating a new API key will <1>invalidate</1> the previous key. Are you sure you wish to continue?',
        lockUntil: 'Lock Until',
        logBackIn: 'Log back in',
        loggedIn: 'To log in with another user, you should <0>log out</0> first.',
        loggedInChangePassword: 'To change your password, go to your <0>account</0> and edit your password there.',
        loggedOutInactivity: 'You have been logged out due to inactivity.',
        loggedOutSuccessfully: 'You have been logged out successfully.',
        loggingOut: 'Logging out...',
        login: 'Login',
        loginAttempts: 'Login Attempts',
        loginUser: 'Login user',
        loginWithAnotherUser: 'To log in with another user, you should <0>log out</0> first.',
        logOut: 'Log out',
        logout: 'Logout',
        logoutSuccessful: 'Logout successful.',
        logoutUser: 'Logout user',
        newAccountCreated: 'A new account has just been created for you to access <a href="{{serverURL}}">{{serverURL}}</a> Please click on the following link or paste the URL below into your browser to verify your email: <a href="{{verificationURL}}">{{verificationURL}}</a><br> After verifying your email, you will be able to log in successfully.',
        newAPIKeyGenerated: 'New API Key Generated.',
        newPassword: 'New Password',
        passed: 'Authentication Passed',
        passwordResetSuccessfully: 'Password reset successfully.',
        resetPassword: 'Reset Password',
        resetPasswordExpiration: 'Reset Password Expiration',
        resetPasswordToken: 'Reset Password Token',
        resetYourPassword: 'Reset Your Password',
        stayLoggedIn: 'Stay logged in',
        successfullyRegisteredFirstUser: 'Successfully registered first user.',
        successfullyUnlocked: 'Successfully unlocked',
        tokenRefreshSuccessful: 'Token refresh successful.',
        unableToVerify: 'Unable to Verify',
        username: 'Username',
        verified: 'Verified',
        verifiedSuccessfully: 'Verified Successfully',
        verify: 'Verify',
        verifyUser: 'Verify User',
        verifyYourEmail: 'Verify your email',
        youAreInactive: "You haven't been active in a little while and will shortly be automatically logged out for your own security. Would you like to stay logged in?",
        youAreReceivingResetPassword: 'You are receiving this because you (or someone else) have requested the reset of the password for your account. Please click on the following link, or paste this into your browser to complete the process:',
        youDidNotRequestPassword: 'If you did not request this, please ignore this email and your password will remain unchanged.'
    },
    error: {
        accountAlreadyActivated: 'This account has already been activated.',
        autosaving: 'There was a problem while autosaving this document.',
        correctInvalidFields: 'Please correct invalid fields.',
        deletingFile: 'There was an error deleting file.',
        deletingTitle: 'There was an error while deleting {{title}}. Please check your connection and try again.',
        emailOrPasswordIncorrect: 'The email or password provided is incorrect.',
        followingFieldsInvalid_one: 'The following field is invalid:',
        followingFieldsInvalid_other: 'The following fields are invalid:',
        incorrectCollection: 'Incorrect Collection',
        invalidFileType: 'Invalid file type',
        invalidFileTypeValue: 'Invalid file type: {{value}}',
        loadingDocument: 'There was a problem loading the document with ID of {{id}}.',
        localesNotSaved_one: 'The following locale could not be saved:',
        localesNotSaved_other: 'The following locales could not be saved:',
        logoutFailed: 'Logout failed.',
        missingEmail: 'Missing email.',
        missingIDOfDocument: 'Missing ID of document to update.',
        missingIDOfVersion: 'Missing ID of version.',
        missingRequiredData: 'Missing required data.',
        noFilesUploaded: 'No files were uploaded.',
        noMatchedField: 'No matched field found for "{{label}}"',
        notAllowedToAccessPage: 'You are not allowed to access this page.',
        notAllowedToPerformAction: 'You are not allowed to perform this action.',
        notFound: 'The requested resource was not found.',
        noUser: 'No User',
        previewing: 'There was a problem previewing this document.',
        problemUploadingFile: 'There was a problem while uploading the file.',
        tokenInvalidOrExpired: 'Token is either invalid or has expired.',
        tokenNotProvided: 'Token not provided.',
        unableToDeleteCount: 'Unable to delete {{count}} out of {{total}} {{label}}.',
        unableToUpdateCount: 'Unable to update {{count}} out of {{total}} {{label}}.',
        unauthorized: 'Unauthorized, you must be logged in to make this request.',
        unknown: 'An unknown error has occurred.',
        unPublishingDocument: 'There was a problem while un-publishing this document.',
        unspecific: 'An error has occurred.',
        userEmailAlreadyRegistered: 'A user with the given email is already registered.',
        userLocked: 'This user is locked due to having too many failed login attempts.',
        usernameAlreadyRegistered: 'A user with the given username is already registered.',
        usernameOrPasswordIncorrect: 'The username or password provided is incorrect.',
        valueMustBeUnique: 'Value must be unique',
        verificationTokenInvalid: 'Verification token is invalid.'
    },
    fields: {
        addLabel: 'Add {{label}}',
        addLink: 'Add Link',
        addNew: 'Add new',
        addNewLabel: 'Add new {{label}}',
        addRelationship: 'Add Relationship',
        addUpload: 'Add Upload',
        block: 'block',
        blocks: 'blocks',
        blockType: 'Block Type',
        chooseBetweenCustomTextOrDocument: 'Choose between entering a custom text URL or linking to another document.',
        chooseDocumentToLink: 'Choose a document to link to',
        chooseFromExisting: 'Choose from existing',
        chooseLabel: 'Choose {{label}}',
        collapseAll: 'Collapse All',
        customURL: 'Custom URL',
        editLabelData: 'Edit {{label}} data',
        editLink: 'Edit Link',
        editRelationship: 'Edit Relationship',
        enterURL: 'Enter a URL',
        internalLink: 'Internal Link',
        itemsAndMore: '{{items}} and {{count}} more',
        labelRelationship: '{{label}} Relationship',
        latitude: 'Latitude',
        linkedTo: 'Linked to <0>{{label}}</0>',
        linkType: 'Link Type',
        longitude: 'Longitude',
        newLabel: 'New {{label}}',
        openInNewTab: 'Open in new tab',
        passwordsDoNotMatch: 'Passwords do not match.',
        relatedDocument: 'Related Document',
        relationTo: 'Relation To',
        removeRelationship: 'Remove Relationship',
        removeUpload: 'Remove Upload',
        saveChanges: 'Save changes',
        searchForBlock: 'Search for a block',
        selectExistingLabel: 'Select existing {{label}}',
        selectFieldsToEdit: 'Select fields to edit',
        showAll: 'Show All',
        swapRelationship: 'Swap Relationship',
        swapUpload: 'Swap Upload',
        textToDisplay: 'Text to display',
        toggleBlock: 'Toggle block',
        uploadNewLabel: 'Upload new {{label}}'
    },
    general: {
        aboutToDelete: 'You are about to delete the {{label}} <1>{{title}}</1>. Are you sure?',
        aboutToDeleteCount_many: 'You are about to delete {{count}} {{label}}',
        aboutToDeleteCount_one: 'You are about to delete {{count}} {{label}}',
        aboutToDeleteCount_other: 'You are about to delete {{count}} {{label}}',
        addBelow: 'Add Below',
        addFilter: 'Add Filter',
        adminTheme: 'Admin Theme',
        and: 'And',
        anotherUserTakenOver: 'Another user has taken over editing this document.',
        applyChanges: 'Apply Changes',
        ascending: 'Ascending',
        automatic: 'Automatic',
        backToDashboard: 'Back to Dashboard',
        cancel: 'Cancel',
        changesNotSaved: 'Your changes have not been saved. If you leave now, you will lose your changes.',
        clearAll: 'Clear All',
        close: 'Close',
        collapse: 'Collapse',
        collections: 'Collections',
        columns: 'Columns',
        columnToSort: 'Column to Sort',
        confirm: 'Confirm',
        confirmDeletion: 'Confirm deletion',
        confirmDuplication: 'Confirm duplication',
        copied: 'Copied',
        copy: 'Copy',
        create: 'Create',
        created: 'Created',
        createdAt: 'Created At',
        createNew: 'Create New',
        createNewLabel: 'Create new {{label}}',
        creating: 'Creating',
        creatingNewLabel: 'Creating new {{label}}',
        currentlyEditing: 'is currently editing this document. If you take over, they will be blocked from continuing to edit, and may also lose unsaved changes.',
        custom: 'Custom',
        dark: 'Dark',
        dashboard: 'Dashboard',
        delete: 'Delete',
        deletedCountSuccessfully: 'Deleted {{count}} {{label}} successfully.',
        deletedSuccessfully: 'Deleted successfully.',
        deleting: 'Deleting...',
        depth: 'Depth',
        descending: 'Descending',
        deselectAllRows: 'Deselect all rows',
        document: 'Document',
        documentLocked: 'Document locked',
        documents: 'Documents',
        duplicate: 'Duplicate',
        duplicateWithoutSaving: 'Duplicate without saving changes',
        edit: 'Edit',
        editedSince: 'Edited since',
        editing: 'Editing',
        editingLabel_many: 'Editing {{count}} {{label}}',
        editingLabel_one: 'Editing {{count}} {{label}}',
        editingLabel_other: 'Editing {{count}} {{label}}',
        editingTakenOver: 'Editing taken over',
        editLabel: 'Edit {{label}}',
        email: 'Email',
        emailAddress: 'Email Address',
        enterAValue: 'Enter a value',
        error: 'Error',
        errors: 'Errors',
        fallbackToDefaultLocale: 'Fallback to default locale',
        false: 'False',
        filter: 'Filter',
        filters: 'Filters',
        filterWhere: 'Filter {{label}} where',
        globals: 'Globals',
        goBack: 'Go back',
        isEditing: 'is editing',
        language: 'Language',
        lastModified: 'Last Modified',
        leaveAnyway: 'Leave anyway',
        leaveWithoutSaving: 'Leave without saving',
        light: 'Light',
        livePreview: 'Live Preview',
        loading: 'Loading',
        locale: 'Locale',
        locales: 'Locales',
        menu: 'Menu',
        moveDown: 'Move Down',
        moveUp: 'Move Up',
        newPassword: 'New Password',
        next: 'Next',
        noFiltersSet: 'No filters set',
        noLabel: '<No {{label}}>',
        none: 'None',
        noOptions: 'No options',
        noResults: "No {{label}} found. Either no {{label}} exist yet or none match the filters you've specified above.",
        notFound: 'Not Found',
        nothingFound: 'Nothing found',
        noValue: 'No value',
        of: 'of',
        only: 'Only',
        open: 'Open',
        or: 'Or',
        order: 'Order',
        pageNotFound: 'Page not found',
        password: 'Password',
        payloadSettings: 'Payload Settings',
        perPage: 'Per Page: {{limit}}',
        previous: 'Previous',
        remove: 'Remove',
        reset: 'Reset',
        row: 'Row',
        rows: 'Rows',
        save: 'Save',
        saving: 'Saving...',
        searchBy: 'Search by {{label}}',
        selectAll: 'Select all {{count}} {{label}}',
        selectAllRows: 'Select all rows',
        selectedCount: '{{count}} {{label}} selected',
        selectValue: 'Select a value',
        showAllLabel: 'Show all {{label}}',
        sorryNotFound: 'Sorry—there is nothing to correspond with your request.',
        sort: 'Sort',
        sortByLabelDirection: 'Sort by {{label}} {{direction}}',
        stayOnThisPage: 'Stay on this page',
        submissionSuccessful: 'Submission Successful.',
        submit: 'Submit',
        submitting: 'Submitting...',
        success: 'Success',
        successfullyCreated: '{{label}} successfully created.',
        successfullyDuplicated: '{{label}} successfully duplicated.',
        takeOver: 'Take over',
        thisLanguage: 'English',
        titleDeleted: '{{label}} "{{title}}" successfully deleted.',
        true: 'True',
        unauthorized: 'Unauthorized',
        unsavedChangesDuplicate: 'You have unsaved changes. Would you like to continue to duplicate?',
        untitled: 'Untitled',
        updatedAt: 'Updated At',
        updatedCountSuccessfully: 'Updated {{count}} {{label}} successfully.',
        updatedSuccessfully: 'Updated successfully.',
        updating: 'Updating',
        uploading: 'Uploading',
        user: 'User',
        username: 'Username',
        users: 'Users',
        value: 'Value',
        viewReadOnly: 'View read-only',
        welcome: 'Welcome'
    },
    operators: {
        contains: 'contains',
        equals: 'equals',
        exists: 'exists',
        intersects: 'intersects',
        isGreaterThan: 'is greater than',
        isGreaterThanOrEqualTo: 'is greater than or equal to',
        isIn: 'is in',
        isLessThan: 'is less than',
        isLessThanOrEqualTo: 'is less than or equal to',
        isLike: 'is like',
        isNotEqualTo: 'is not equal to',
        isNotIn: 'is not in',
        near: 'near',
        within: 'within'
    },
    upload: {
        addFile: 'Add File',
        addFiles: 'Add Files',
        bulkUpload: 'Bulk Upload',
        crop: 'Crop',
        cropToolDescription: 'Drag the corners of the selected area, draw a new area or adjust the values below.',
        dragAndDrop: 'Drag and drop a file',
        dragAndDropHere: 'or drag and drop a file here',
        editImage: 'Edit Image',
        fileName: 'File Name',
        fileSize: 'File Size',
        filesToUpload: 'Files to Upload',
        fileToUpload: 'File to Upload',
        focalPoint: 'Focal Point',
        focalPointDescription: 'Drag the focal point directly on the preview or adjust the values below.',
        height: 'Height',
        lessInfo: 'Less info',
        moreInfo: 'More info',
        pasteURL: 'Paste URL',
        previewSizes: 'Preview Sizes',
        selectCollectionToBrowse: 'Select a Collection to Browse',
        selectFile: 'Select a file',
        setCropArea: 'Set crop area',
        setFocalPoint: 'Set focal point',
        sizes: 'Sizes',
        sizesFor: 'Sizes for {{label}}',
        width: 'Width'
    },
    validation: {
        emailAddress: 'Please enter a valid email address.',
        enterNumber: 'Please enter a valid number.',
        fieldHasNo: 'This field has no {{label}}',
        greaterThanMax: '{{value}} is greater than the max allowed {{label}} of {{max}}.',
        invalidInput: 'This field has an invalid input.',
        invalidSelection: 'This field has an invalid selection.',
        invalidSelections: 'This field has the following invalid selections:',
        lessThanMin: '{{value}} is less than the min allowed {{label}} of {{min}}.',
        limitReached: 'Limit reached, only {{max}} items can be added.',
        longerThanMin: 'This value must be longer than the minimum length of {{minLength}} characters.',
        notValidDate: '"{{value}}" is not a valid date.',
        required: 'This field is required.',
        requiresAtLeast: 'This field requires at least {{count}} {{label}}.',
        requiresNoMoreThan: 'This field requires no more than {{count}} {{label}}.',
        requiresTwoNumbers: 'This field requires two numbers.',
        shorterThanMax: 'This value must be shorter than the max length of {{maxLength}} characters.',
        trueOrFalse: 'This field can only be equal to true or false.',
        username: 'Please enter a valid username. Can contain letters, numbers, hyphens, periods and underscores.',
        validUploadID: 'This field is not a valid upload ID.'
    },
    version: {
        type: 'Type',
        aboutToPublishSelection: 'You are about to publish all {{label}} in the selection. Are you sure?',
        aboutToRestore: 'You are about to restore this {{label}} document to the state that it was in on {{versionDate}}.',
        aboutToRestoreGlobal: 'You are about to restore the global {{label}} to the state that it was in on {{versionDate}}.',
        aboutToRevertToPublished: "You are about to revert this document's changes to its published state. Are you sure?",
        aboutToUnpublish: 'You are about to unpublish this document. Are you sure?',
        aboutToUnpublishSelection: 'You are about to unpublish all {{label}} in the selection. Are you sure?',
        autosave: 'Autosave',
        autosavedSuccessfully: 'Autosaved successfully.',
        autosavedVersion: 'Autosaved version',
        changed: 'Changed',
        compareVersion: 'Compare version against:',
        confirmPublish: 'Confirm publish',
        confirmRevertToSaved: 'Confirm revert to saved',
        confirmUnpublish: 'Confirm unpublish',
        confirmVersionRestoration: 'Confirm version Restoration',
        currentDocumentStatus: 'Current {{docStatus}} document',
        currentDraft: 'Current Draft',
        currentPublishedVersion: 'Current Published Version',
        draft: 'Draft',
        draftSavedSuccessfully: 'Draft saved successfully.',
        lastSavedAgo: 'Last saved {{distance}} ago',
        noFurtherVersionsFound: 'No further versions found',
        noRowsFound: 'No {{label}} found',
        noRowsSelected: 'No {{label}} selected',
        preview: 'Preview',
        previouslyPublished: 'Previously Published',
        problemRestoringVersion: 'There was a problem restoring this version',
        publish: 'Publish',
        publishChanges: 'Publish changes',
        published: 'Published',
        publishIn: 'Publish in {{locale}}',
        publishing: 'Publishing',
        restoreAsDraft: 'Restore as draft',
        restoredSuccessfully: 'Restored Successfully.',
        restoreThisVersion: 'Restore this version',
        restoring: 'Restoring...',
        reverting: 'Reverting...',
        revertToPublished: 'Revert to published',
        saveDraft: 'Save Draft',
        selectLocales: 'Select locales to display',
        selectVersionToCompare: 'Select a version to compare',
        showingVersionsFor: 'Showing versions for:',
        showLocales: 'Show locales:',
        status: 'Status',
        unpublish: 'Unpublish',
        unpublishing: 'Unpublishing...',
        version: 'Version',
        versionCount_many: '{{count}} versions found',
        versionCount_none: 'No versions found',
        versionCount_one: '{{count}} version found',
        versionCount_other: '{{count}} versions found',
        versionCreatedOn: '{{version}} created on:',
        versionID: 'Version ID',
        versions: 'Versions',
        viewingVersion: 'Viewing version for the {{entityLabel}} {{documentTitle}}',
        viewingVersionGlobal: 'Viewing version for the global {{entityLabel}}',
        viewingVersions: 'Viewing versions for the {{entityLabel}} {{documentTitle}}',
        viewingVersionsGlobal: 'Viewing versions for the global {{entityLabel}}'
    }
};
const en = {
    dateFNSKey: 'en-US',
    translations: enTranslations
}; //# sourceMappingURL=en.js.map
}}),
"[project]/node_modules/@payloadcms/translations/dist/utilities/deepMergeSimple.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/**
 * Very simple, but fast deepMerge implementation. Only deepMerges objects, not arrays and clones everything.
 * Do not use this if your object contains any complex objects like React Components, or if you would like to combine Arrays.
 * If you only have simple objects and need a fast deepMerge, this is the function for you.
 *
 * obj2 takes precedence over obj1 - thus if obj2 has a key that obj1 also has, obj2's value will be used.
 *
 * @param obj1 base object
 * @param obj2 object to merge "into" obj1
 */ __turbopack_esm__({
    "deepMergeSimple": (()=>deepMergeSimple)
});
function deepMergeSimple(obj1, obj2) {
    const output = {
        ...obj1
    };
    for(const key in obj2){
        if (Object.prototype.hasOwnProperty.call(obj2, key)) {
            if (typeof obj2[key] === 'object' && !Array.isArray(obj2[key]) && obj1[key]) {
                output[key] = deepMergeSimple(obj1[key], obj2[key]);
            } else {
                output[key] = obj2[key];
            }
        }
    }
    return output;
} //# sourceMappingURL=deepMergeSimple.js.map
}}),
"[project]/node_modules/@payloadcms/translations/dist/exports/utilities.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
 //# sourceMappingURL=utilities.js.map
}}),
"[project]/node_modules/@payloadcms/translations/dist/exports/utilities.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$utilities$2f$deepMergeSimple$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/translations/dist/utilities/deepMergeSimple.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$exports$2f$utilities$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@payloadcms/translations/dist/exports/utilities.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/@payloadcms/translations/dist/importDateFNSLocale.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "importDateFNSLocale": (()=>importDateFNSLocale)
});
const importDateFNSLocale = async (locale)=>{
    let result;
    switch(locale){
        case 'ar':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/ar.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).ar;
            break;
        case 'az':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/az.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).az;
            break;
        case 'bg':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/bg.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).bg;
            break;
        case 'cs':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/cs.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).cs;
            break;
        case 'da':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/da.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).da;
            break;
        case 'de':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/de.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).de;
            break;
        case 'en-US':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/en-US.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).enUS;
            break;
        case 'es':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/es.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).es;
            break;
        case 'fa-IR':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/fa-IR.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).faIR;
            break;
        case 'fr':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/fr.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).fr;
            break;
        case 'he':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/he.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).he;
            break;
        case 'hr':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/hr.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).hr;
            break;
        case 'hu':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/hu.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).hu;
            break;
        case 'it':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/it.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).it;
            break;
        case 'ja':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/ja.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).ja;
            break;
        case 'ko':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/ko.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).ko;
            break;
        case 'nb':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/nb.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).nb;
            break;
        case 'nl':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/nl.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).nl;
            break;
        case 'pl':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/pl.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).pl;
            break;
        case 'pt':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/pt.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).pt;
            break;
        case 'ro':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/ro.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).ro;
            break;
        case 'ru':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/ru.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).ru;
            break;
        case 'sk':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/sk.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).sk;
            break;
        case 'sv':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/sv.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).sv;
            break;
        case 'th':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/th.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).th;
            break;
        case 'tr':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/tr.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).tr;
            break;
        case 'uk':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/uk.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).uk;
            break;
        case 'vi':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/vi.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).vi;
            break;
        case 'zh-CN':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/zh-CN.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).zhCN;
            break;
        case 'zh-TW':
            result = (await __turbopack_require__("[project]/node_modules/date-fns/locale/zh-TW.mjs [app-route] (ecmascript, async loader)")(__turbopack_import__)).zhTW;
            break;
    }
    if (result.default) {
        return result.default;
    }
    return result;
}; //# sourceMappingURL=importDateFNSLocale.js.map
}}),
"[project]/node_modules/@payloadcms/translations/dist/utilities/getTranslation.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getTranslation": (()=>getTranslation)
});
const getTranslation = (label, i18n)=>{
    // If it's a Record, look for translation. If string or React Element, pass through
    if (typeof label === 'object' && !Object.prototype.hasOwnProperty.call(label, '$$typeof')) {
        if (label[i18n.language]) {
            return label[i18n.language];
        }
        let fallbacks = [];
        if (typeof i18n.fallbackLanguage === 'string') {
            fallbacks = [
                i18n.fallbackLanguage
            ];
        } else if (Array.isArray(i18n.fallbackLanguage)) {
            fallbacks = i18n.fallbackLanguage;
        }
        const fallbackLang = fallbacks.find((language)=>label[language]);
        return fallbackLang && label[fallbackLang] ? label[fallbackLang] : label[Object.keys(label)[0]];
    }
    if (typeof label === 'function') {
        return label({
            t: i18n.t
        });
    }
    // If it's a React Element or string, then we should just pass it through
    return label;
}; //# sourceMappingURL=getTranslation.js.map
}}),
"[project]/node_modules/@payloadcms/translations/dist/clientKeys.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "clientTranslationKeys": (()=>clientTranslationKeys)
});
function createClientTranslationKeys(keys) {
    return keys;
}
const clientTranslationKeys = createClientTranslationKeys([
    'authentication:account',
    'authentication:accountOfCurrentUser',
    'authentication:accountVerified',
    'authentication:alreadyActivated',
    'authentication:alreadyLoggedIn',
    'authentication:apiKey',
    'authentication:authenticated',
    'authentication:backToLogin',
    'authentication:beginCreateFirstUser',
    'authentication:changePassword',
    'authentication:checkYourEmailForPasswordReset',
    'authentication:confirmGeneration',
    'authentication:confirmPassword',
    'authentication:createFirstUser',
    'authentication:emailNotValid',
    'authentication:usernameNotValid',
    'authentication:emailOrUsername',
    'authentication:emailSent',
    'authentication:emailVerified',
    'authentication:enableAPIKey',
    'authentication:failedToUnlock',
    'authentication:forceUnlock',
    'authentication:forgotPassword',
    'authentication:forgotPasswordEmailInstructions',
    'authentication:forgotPasswordUsernameInstructions',
    'authentication:forgotPasswordQuestion',
    'authentication:generate',
    'authentication:generateNewAPIKey',
    'authentication:generatingNewAPIKeyWillInvalidate',
    'authentication:logBackIn',
    'authentication:loggedOutInactivity',
    'authentication:loggedOutSuccessfully',
    'authentication:loggingOut',
    'authentication:login',
    'authentication:logOut',
    'authentication:loggedIn',
    'authentication:loggedInChangePassword',
    'authentication:logout',
    'authentication:logoutUser',
    'authentication:logoutSuccessful',
    'authentication:newAPIKeyGenerated',
    'authentication:newPassword',
    'authentication:passed',
    'authentication:passwordResetSuccessfully',
    'authentication:resetPassword',
    'authentication:stayLoggedIn',
    'authentication:successfullyRegisteredFirstUser',
    'authentication:successfullyUnlocked',
    'authentication:username',
    'authentication:unableToVerify',
    'authentication:tokenRefreshSuccessful',
    'authentication:verified',
    'authentication:verifiedSuccessfully',
    'authentication:verify',
    'authentication:verifyUser',
    'authentication:youAreInactive',
    'error:autosaving',
    'error:correctInvalidFields',
    'error:deletingTitle',
    'error:emailOrPasswordIncorrect',
    'error:usernameOrPasswordIncorrect',
    'error:loadingDocument',
    'error:logoutFailed',
    'error:noMatchedField',
    'error:notAllowedToAccessPage',
    'error:previewing',
    'error:unableToDeleteCount',
    'error:unableToUpdateCount',
    'error:unauthorized',
    'error:unknown',
    'error:unspecific',
    'error:userEmailAlreadyRegistered',
    'error:usernameAlreadyRegistered',
    'error:tokenNotProvided',
    'error:unPublishingDocument',
    'fields:addLabel',
    'fields:addLink',
    'fields:addNew',
    'fields:addNewLabel',
    'fields:addRelationship',
    'fields:addUpload',
    'fields:block',
    'fields:blocks',
    'fields:blockType',
    'fields:chooseBetweenCustomTextOrDocument',
    'fields:customURL',
    'fields:chooseDocumentToLink',
    'fields:openInNewTab',
    'fields:enterURL',
    'fields:internalLink',
    'fields:chooseFromExisting',
    'fields:linkType',
    'fields:textToDisplay',
    'fields:collapseAll',
    'fields:editLink',
    'fields:editRelationship',
    'fields:itemsAndMore',
    'fields:labelRelationship',
    'fields:latitude',
    'fields:linkedTo',
    'fields:longitude',
    'fields:passwordsDoNotMatch',
    'fields:removeRelationship',
    'fields:removeUpload',
    'fields:saveChanges',
    'fields:searchForBlock',
    'fields:selectFieldsToEdit',
    'fields:showAll',
    'fields:swapRelationship',
    'fields:swapUpload',
    'fields:toggleBlock',
    'fields:uploadNewLabel',
    'general:aboutToDeleteCount',
    'general:aboutToDelete',
    'general:addBelow',
    'general:addFilter',
    'general:adminTheme',
    'general:and',
    'general:anotherUserTakenOver',
    'general:applyChanges',
    'general:ascending',
    'general:automatic',
    'general:backToDashboard',
    'general:cancel',
    'general:changesNotSaved',
    'general:close',
    'general:collapse',
    'general:collections',
    'general:columns',
    'general:columnToSort',
    'general:confirm',
    'general:confirmDeletion',
    'general:confirmDuplication',
    'general:copied',
    'general:clearAll',
    'general:copy',
    'general:create',
    'general:created',
    'general:createdAt',
    'general:createNew',
    'general:createNewLabel',
    'general:creating',
    'general:creatingNewLabel',
    'general:currentlyEditing',
    'general:custom',
    'general:dark',
    'general:dashboard',
    'general:delete',
    'general:deletedSuccessfully',
    'general:deletedCountSuccessfully',
    'general:deleting',
    'general:descending',
    'general:depth',
    'general:deselectAllRows',
    'general:document',
    'general:documentLocked',
    'general:documents',
    'general:duplicate',
    'general:duplicateWithoutSaving',
    'general:edit',
    'general:editing',
    'general:editingLabel',
    'general:editingTakenOver',
    'general:editLabel',
    'general:editedSince',
    'general:email',
    'general:emailAddress',
    'general:enterAValue',
    'general:error',
    'general:errors',
    'general:fallbackToDefaultLocale',
    'general:false',
    'general:filters',
    'general:filterWhere',
    'general:globals',
    'general:goBack',
    'general:isEditing',
    'general:language',
    'general:lastModified',
    'general:leaveAnyway',
    'general:leaveWithoutSaving',
    'general:light',
    'general:livePreview',
    'general:loading',
    'general:locale',
    'general:menu',
    'general:moveDown',
    'general:moveUp',
    'general:next',
    'general:noFiltersSet',
    'general:noLabel',
    'general:none',
    'general:noOptions',
    'general:noResults',
    'general:notFound',
    'general:nothingFound',
    'general:noValue',
    'general:of',
    'general:open',
    'general:only',
    'general:or',
    'general:order',
    'general:pageNotFound',
    'general:password',
    'general:payloadSettings',
    'general:perPage',
    'general:previous',
    'general:remove',
    'general:reset',
    'general:row',
    'general:rows',
    'general:save',
    'general:saving',
    'general:searchBy',
    'general:selectAll',
    'general:selectAllRows',
    'general:selectedCount',
    'general:selectValue',
    'general:showAllLabel',
    'general:sorryNotFound',
    'general:sort',
    'general:sortByLabelDirection',
    'general:stayOnThisPage',
    'general:submissionSuccessful',
    'general:submit',
    'general:submitting',
    'general:success',
    'general:successfullyCreated',
    'general:successfullyDuplicated',
    'general:takeOver',
    'general:thisLanguage',
    'general:titleDeleted',
    'general:true',
    'general:users',
    'general:user',
    'general:username',
    'general:unauthorized',
    'general:unsavedChangesDuplicate',
    'general:untitled',
    'general:updatedAt',
    'general:updatedCountSuccessfully',
    'general:updatedSuccessfully',
    'general:updating',
    'general:viewReadOnly',
    'general:uploading',
    'general:welcome',
    'operators:equals',
    'operators:exists',
    'operators:isNotIn',
    'operators:isIn',
    'operators:contains',
    'operators:isLike',
    'operators:isNotEqualTo',
    'operators:near',
    'operators:isGreaterThan',
    'operators:isLessThan',
    'operators:isGreaterThanOrEqualTo',
    'operators:isLessThanOrEqualTo',
    'operators:within',
    'operators:intersects',
    'upload:addFile',
    'upload:addFiles',
    'upload:bulkUpload',
    'upload:crop',
    'upload:cropToolDescription',
    'upload:dragAndDrop',
    'upload:editImage',
    'upload:fileToUpload',
    'upload:filesToUpload',
    'upload:focalPoint',
    'upload:focalPointDescription',
    'upload:height',
    'upload:pasteURL',
    'upload:previewSizes',
    'upload:selectCollectionToBrowse',
    'upload:selectFile',
    'upload:setCropArea',
    'upload:setFocalPoint',
    'upload:sizesFor',
    'upload:sizes',
    'upload:width',
    'upload:fileName',
    'upload:fileSize',
    'validation:emailAddress',
    'validation:fieldHasNo',
    'validation:limitReached',
    'validation:longerThanMin',
    'validation:required',
    'validation:requiresAtLeast',
    'validation:shorterThanMax',
    'validation:username',
    'version:aboutToPublishSelection',
    'version:aboutToRestore',
    'version:aboutToRestoreGlobal',
    'version:aboutToRevertToPublished',
    'version:aboutToUnpublish',
    'version:aboutToUnpublishSelection',
    'version:autosave',
    'version:autosavedSuccessfully',
    'version:autosavedVersion',
    'version:changed',
    'version:confirmRevertToSaved',
    'version:compareVersion',
    'version:confirmPublish',
    'version:confirmUnpublish',
    'version:confirmVersionRestoration',
    'version:currentDraft',
    'version:currentPublishedVersion',
    'version:draft',
    'version:draftSavedSuccessfully',
    'version:lastSavedAgo',
    'version:noFurtherVersionsFound',
    'version:noRowsFound',
    'version:noRowsSelected',
    'version:preview',
    'version:previouslyPublished',
    'version:problemRestoringVersion',
    'version:publish',
    'version:publishChanges',
    'version:published',
    'version:publishIn',
    'version:publishing',
    'version:restoreAsDraft',
    'version:restoredSuccessfully',
    'version:restoreThisVersion',
    'version:restoring',
    'version:reverting',
    'version:revertToPublished',
    'version:saveDraft',
    'version:selectLocales',
    'version:selectVersionToCompare',
    'version:showLocales',
    'version:status',
    'version:type',
    'version:unpublish',
    'version:unpublishing',
    'version:versionCreatedOn',
    'version:versionID',
    'version:version',
    'version:versions',
    'version:viewingVersion',
    'version:viewingVersionGlobal',
    'version:viewingVersions',
    'version:viewingVersionsGlobal'
]); //# sourceMappingURL=clientKeys.js.map
}}),
"[project]/node_modules/@payloadcms/translations/dist/utilities/getTranslationsByContext.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getTranslationsByContext": (()=>getTranslationsByContext)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$clientKeys$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/translations/dist/clientKeys.js [app-route] (ecmascript)");
;
function filterKeys(obj, parentGroupKey = '', keys) {
    const result = {};
    for (const [namespaceKey, value] of Object.entries(obj)){
        // Skip $schema key
        if (namespaceKey === '$schema') {
            result[namespaceKey] = value;
            continue;
        }
        if (typeof value === 'object') {
            const filteredObject = filterKeys(value, namespaceKey, keys);
            if (Object.keys(filteredObject).length > 0) {
                result[namespaceKey] = filteredObject;
            }
        } else {
            for (const key of keys){
                const [groupKey, selector] = key.split(':');
                if (parentGroupKey === groupKey) {
                    if (namespaceKey === selector) {
                        result[selector] = value;
                    } else {
                        const pluralKeys = [
                            'zero',
                            'one',
                            'two',
                            'few',
                            'many',
                            'other'
                        ];
                        pluralKeys.forEach((pluralKey)=>{
                            if (namespaceKey === `${selector}_${pluralKey}`) {
                                result[`${selector}_${pluralKey}`] = value;
                            }
                        });
                    }
                }
            }
        }
    }
    return result;
}
function sortObject(obj) {
    const sortedObject = {};
    Object.keys(obj).sort().forEach((key)=>{
        if (typeof obj[key] === 'object') {
            sortedObject[key] = sortObject(obj[key]);
        } else {
            sortedObject[key] = obj[key];
        }
    });
    return sortedObject;
}
const getTranslationsByContext = (selectedLanguage, context)=>{
    if (context === 'client') {
        return sortObject(filterKeys(selectedLanguage.translations, '', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$clientKeys$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["clientTranslationKeys"]));
    } else {
        return selectedLanguage.translations;
    }
}; //# sourceMappingURL=getTranslationsByContext.js.map
}}),
"[project]/node_modules/@payloadcms/translations/dist/utilities/init.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getTranslationString": (()=>getTranslationString),
    "initI18n": (()=>initI18n),
    "t": (()=>t)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$importDateFNSLocale$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/translations/dist/importDateFNSLocale.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$utilities$2f$deepMergeSimple$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/translations/dist/utilities/deepMergeSimple.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$utilities$2f$getTranslationsByContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/translations/dist/utilities/getTranslationsByContext.js [app-route] (ecmascript)");
;
;
;
const getTranslationString = ({ count, key, translations })=>{
    const keys = key.split(':');
    let keySuffix = '';
    const translation = keys.reduce((acc, key, index)=>{
        if (typeof acc === 'string') {
            return acc;
        }
        if (typeof count === 'number') {
            if (count === 0 && `${key}_zero` in acc) {
                keySuffix = '_zero';
            } else if (count === 1 && `${key}_one` in acc) {
                keySuffix = '_one';
            } else if (count === 2 && `${key}_two` in acc) {
                keySuffix = '_two';
            } else if (count > 5 && `${key}_many` in acc) {
                keySuffix = '_many';
            } else if (count > 2 && count <= 5 && `${key}_few` in acc) {
                keySuffix = '_few';
            } else if (`${key}_other` in acc) {
                keySuffix = '_other';
            }
        }
        let keyToUse = key;
        if (index === keys.length - 1 && keySuffix) {
            keyToUse = `${key}${keySuffix}`;
        }
        if (acc && keyToUse in acc) {
            return acc[keyToUse];
        }
        return undefined;
    }, translations);
    if (!translation) {
        console.log('key not found:', key);
    }
    return translation || key;
};
/**
 * @function replaceVars
 *
 * Replaces variables in a translation string with values from an object
 *
 * @returns string
 */ const replaceVars = ({ translationString, vars })=>{
    const parts = translationString.split(/(\{\{.*?\}\})/);
    return parts.map((part)=>{
        if (part.startsWith('{{') && part.endsWith('}}')) {
            const placeholder = part.substring(2, part.length - 2).trim();
            const value = vars[placeholder];
            return value !== undefined && value !== null ? value : part;
        } else {
            return part;
        }
    }).join('');
};
function t({ key, translations, vars }) {
    let translationString = getTranslationString({
        count: typeof vars?.count === 'number' ? vars.count : undefined,
        key,
        translations
    });
    if (vars) {
        translationString = replaceVars({
            translationString,
            vars
        });
    }
    if (!translationString) {
        translationString = key;
    }
    return translationString;
}
const initTFunction = (args)=>{
    const { config, language, translations } = args;
    const mergedTranslations = config?.translations?.[language] ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$utilities$2f$deepMergeSimple$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["deepMergeSimple"])(translations, config?.translations?.[language]) : translations;
    return {
        t: (key, vars)=>{
            return t({
                key,
                translations: mergedTranslations,
                vars
            });
        },
        translations: mergedTranslations
    };
};
function memoize(fn, keys) {
    const cacheMap = new Map();
    const memoized = async (args)=>{
        const cacheKey = keys.reduce((acc, key)=>acc + args[key], '');
        if (!cacheMap.has(cacheKey)) {
            const result = await fn(args);
            cacheMap.set(cacheKey, result);
        }
        return cacheMap.get(cacheKey);
    };
    return memoized;
}
const initI18n = memoize(async ({ config, context, language = config.fallbackLanguage })=>{
    const translations = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$utilities$2f$getTranslationsByContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getTranslationsByContext"])(config.supportedLanguages[language], context);
    const { t, translations: mergedTranslations } = initTFunction({
        config: config,
        language: language || config.fallbackLanguage,
        translations: translations
    });
    const dateFNSKey = config.supportedLanguages[language]?.dateFNSKey || 'en-US';
    const dateFNS = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$importDateFNSLocale$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["importDateFNSLocale"])(dateFNSKey);
    const i18n = {
        dateFNS,
        dateFNSKey,
        fallbackLanguage: config.fallbackLanguage,
        language: language || config.fallbackLanguage,
        t,
        translations: mergedTranslations
    };
    return i18n;
}, [
    'language',
    'context'
]); //# sourceMappingURL=init.js.map
}}),
"[project]/node_modules/@payloadcms/translations/dist/utilities/languages.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "acceptedLanguages": (()=>acceptedLanguages),
    "extractHeaderLanguage": (()=>extractHeaderLanguage),
    "rtlLanguages": (()=>rtlLanguages)
});
const rtlLanguages = [
    'ar',
    'fa',
    'he'
];
const acceptedLanguages = [
    'ar',
    'az',
    'bg',
    'cs',
    'da',
    'de',
    'en',
    'es',
    'fa',
    'fr',
    'he',
    'hr',
    'hu',
    'it',
    'ja',
    'ko',
    'my',
    'nb',
    'nl',
    'pl',
    'pt',
    'ro',
    'rs',
    'rs-latin',
    'ru',
    'sk',
    'sv',
    'th',
    'tr',
    'uk',
    'vi',
    'zh',
    'zh-TW'
];
function parseAcceptLanguage(acceptLanguageHeader) {
    return acceptLanguageHeader.split(',').map((lang)=>{
        const [language, quality] = lang.trim().split(';q=');
        return {
            language,
            quality: quality ? parseFloat(quality) : 1
        };
    }).sort((a, b)=>b.quality - a.quality); // Sort by quality, highest to lowest
}
function extractHeaderLanguage(acceptLanguageHeader) {
    const parsedHeader = parseAcceptLanguage(acceptLanguageHeader);
    let matchedLanguage;
    for (const { language } of parsedHeader){
        if (!matchedLanguage && acceptedLanguages.includes(language)) {
            matchedLanguage = language;
        }
    }
    return matchedLanguage;
} //# sourceMappingURL=languages.js.map
}}),
"[project]/node_modules/@payloadcms/translations/dist/exports/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@payloadcms/translations/dist/exports/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$importDateFNSLocale$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/translations/dist/importDateFNSLocale.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$utilities$2f$getTranslation$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/translations/dist/utilities/getTranslation.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$utilities$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/translations/dist/utilities/init.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$utilities$2f$languages$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/translations/dist/utilities/languages.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$exports$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@payloadcms/translations/dist/exports/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/@payloadcms/db-postgres/dist/connect.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "connect": (()=>connect)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$pg$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (pg, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f$drizzle$2d$orm$2f$node$2d$postgres$2f$driver$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/drizzle-orm/node-postgres/driver.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$utilities$2f$pushDevSchema$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/utilities/pushDevSchema.js [app-route] (ecmascript)");
;
;
;
const connectWithReconnect = async function({ adapter, payload, reconnect = false }) {
    let result;
    if (!reconnect) {
        result = await adapter.pool.connect();
    } else {
        try {
            result = await adapter.pool.connect();
        } catch (ignore) {
            setTimeout(()=>{
                payload.logger.info('Reconnecting to postgres');
                void connectWithReconnect({
                    adapter,
                    payload,
                    reconnect: true
                });
            }, 1000);
        }
    }
    if (!result) {
        return;
    }
    result.prependListener('error', (err)=>{
        try {
            if (err.code === 'ECONNRESET') {
                void connectWithReconnect({
                    adapter,
                    payload,
                    reconnect: true
                });
            }
        } catch (ignore) {
        // swallow error
        }
    });
};
const connect = async function connect(options = {
    hotReload: false
}) {
    const { hotReload } = options;
    this.schema = {
        pgSchema: this.pgSchema,
        ...this.tables,
        ...this.relations,
        ...this.enums
    };
    try {
        if (!this.pool) {
            this.pool = new __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$pg$2c$__cjs$29$__["default"].Pool(this.poolOptions);
            await connectWithReconnect({
                adapter: this,
                payload: this.payload
            });
        }
        const logger = this.logger || false;
        this.drizzle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f$drizzle$2d$orm$2f$node$2d$postgres$2f$driver$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["drizzle"])({
            client: this.pool,
            logger,
            schema: this.schema
        });
        if (!hotReload) {
            if (process.env.PAYLOAD_DROP_DATABASE === 'true') {
                this.payload.logger.info(`---- DROPPING TABLES SCHEMA(${this.schemaName || 'public'}) ----`);
                await this.dropDatabase({
                    adapter: this
                });
                this.payload.logger.info('---- DROPPED TABLES ----');
            }
        }
    } catch (err) {
        if (err.message?.match(/database .* does not exist/i) && !this.disableCreateDatabase) {
            // capitalize first char of the err msg
            this.payload.logger.info(`${err.message.charAt(0).toUpperCase() + err.message.slice(1)}, creating...`);
            const isCreated = await this.createDatabase();
            if (isCreated) {
                await this.connect(options);
                return;
            }
        } else {
            this.payload.logger.error({
                err,
                msg: `Error: cannot connect to Postgres. Details: ${err.message}`
            });
        }
        if (typeof this.rejectInitializing === 'function') {
            this.rejectInitializing();
        }
        process.exit(1);
    }
    // Only push schema if not in production
    if (("TURBOPACK compile-time value", "development") !== 'production' && process.env.PAYLOAD_MIGRATING !== 'true' && this.push !== false) {
        await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$utilities$2f$pushDevSchema$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["pushDevSchema"])(this);
    }
    if (typeof this.resolveInitializing === 'function') {
        this.resolveInitializing();
    }
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
}; //# sourceMappingURL=connect.js.map
}}),
"[project]/node_modules/@payloadcms/db-postgres/dist/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "postgresAdapter": (()=>postgresAdapter)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$findMigrationDir$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/findMigrationDir.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f$drizzle$2d$orm$2f$pg$2d$core$2f$columns$2f$enum$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/drizzle-orm/pg-core/columns/enum.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f$drizzle$2d$orm$2f$pg$2d$core$2f$table$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/drizzle-orm/pg-core/table.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f$drizzle$2d$orm$2f$pg$2d$core$2f$schema$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/drizzle-orm/pg-core/schema.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$database$2f$createDatabaseAdapter$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/database/createDatabaseAdapter.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$createDatabase$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/postgres/createDatabase.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$defaultSnapshot$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/postgres/defaultSnapshot.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$getMigrationTemplate$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/postgres/getMigrationTemplate.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$queries$2f$operatorMap$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/queries/operatorMap.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$transactions$2f$beginTransaction$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/transactions/beginTransaction.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$database$2f$defaultBeginTransaction$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/database/defaultBeginTransaction.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$transactions$2f$commitTransaction$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/transactions/commitTransaction.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$dist$2f$connect$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/dist/connect.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$createJSONQuery$2f$convertPathToJSONTraversal$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/postgres/createJSONQuery/convertPathToJSONTraversal.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$count$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/count.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$countDistinct$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/postgres/countDistinct.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$create$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/create.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$createGlobal$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/createGlobal.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$createGlobalVersion$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/createGlobalVersion.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$createJSONQuery$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/postgres/createJSONQuery/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$createMigration$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/postgres/createMigration.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$createVersion$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/createVersion.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$deleteMany$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/deleteMany.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$deleteOne$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/deleteOne.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$deleteVersions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/deleteVersions.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$deleteWhere$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/postgres/deleteWhere.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$destroy$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/destroy.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$dropDatabase$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/postgres/dropDatabase.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$execute$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/postgres/execute.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$find$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/find.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$findGlobal$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/findGlobal.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$findGlobalVersions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/findGlobalVersions.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$findOne$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/findOne.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$findVersions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/findVersions.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/postgres/init.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$insert$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/postgres/insert.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$migrate$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/migrate.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$migrateDown$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/migrateDown.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$migrateFresh$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/migrateFresh.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$migrateRefresh$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/migrateRefresh.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$migrateReset$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/migrateReset.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$migrateStatus$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/migrateStatus.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$queryDrafts$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/queryDrafts.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$requireDrizzleKit$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/postgres/requireDrizzleKit.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$transactions$2f$rollbackTransaction$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/transactions/rollbackTransaction.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$updateGlobal$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/updateGlobal.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$updateGlobalVersion$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/updateGlobalVersion.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$update$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/update.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$updateVersion$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/updateVersion.js [app-route] (ecmascript)");
;
;
;
;
;
function postgresAdapter(args) {
    const postgresIDType = args.idType || 'serial';
    const payloadIDType = postgresIDType === 'serial' ? 'number' : 'text';
    function adapter({ payload }) {
        const migrationDir = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$findMigrationDir$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["findMigrationDir"])(args.migrationDir);
        let resolveInitializing;
        let rejectInitializing;
        let adapterSchema;
        const initializing = new Promise((res, rej)=>{
            resolveInitializing = res;
            rejectInitializing = rej;
        });
        if (args.schemaName) {
            adapterSchema = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f$drizzle$2d$orm$2f$pg$2d$core$2f$schema$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["pgSchema"])(args.schemaName);
        } else {
            adapterSchema = {
                enum: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f$drizzle$2d$orm$2f$pg$2d$core$2f$columns$2f$enum$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["pgEnum"],
                table: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f$drizzle$2d$orm$2f$pg$2d$core$2f$table$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["pgTable"]
            };
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$database$2f$createDatabaseAdapter$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createDatabaseAdapter"])({
            name: 'postgres',
            afterSchemaInit: args.afterSchemaInit ?? [],
            beforeSchemaInit: args.beforeSchemaInit ?? [],
            createDatabase: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$createDatabase$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createDatabase"],
            defaultDrizzleSnapshot: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$defaultSnapshot$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultDrizzleSnapshot"],
            disableCreateDatabase: args.disableCreateDatabase ?? false,
            drizzle: undefined,
            enums: {},
            features: {
                json: true
            },
            fieldConstraints: {},
            getMigrationTemplate: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$getMigrationTemplate$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getMigrationTemplate"],
            idType: postgresIDType,
            initializing,
            localesSuffix: args.localesSuffix || '_locales',
            logger: args.logger,
            operators: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$queries$2f$operatorMap$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["operatorMap"],
            pgSchema: adapterSchema,
            pool: undefined,
            poolOptions: args.pool,
            prodMigrations: args.prodMigrations,
            push: args.push,
            relations: {},
            relationshipsSuffix: args.relationshipsSuffix || '_rels',
            schema: {},
            schemaName: args.schemaName,
            sessions: {},
            tableNameMap: new Map(),
            tables: {},
            transactionOptions: args.transactionOptions || undefined,
            versionsSuffix: args.versionsSuffix || '_v',
            // DatabaseAdapter
            beginTransaction: args.transactionOptions === false ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$database$2f$defaultBeginTransaction$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultBeginTransaction"])() : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$transactions$2f$beginTransaction$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["beginTransaction"],
            commitTransaction: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$transactions$2f$commitTransaction$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["commitTransaction"],
            connect: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$dist$2f$connect$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["connect"],
            convertPathToJSONTraversal: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$createJSONQuery$2f$convertPathToJSONTraversal$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["convertPathToJSONTraversal"],
            count: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$count$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["count"],
            countDistinct: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$countDistinct$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["countDistinct"],
            create: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$create$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["create"],
            createGlobal: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$createGlobal$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createGlobal"],
            createGlobalVersion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$createGlobalVersion$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createGlobalVersion"],
            createJSONQuery: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$createJSONQuery$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createJSONQuery"],
            createMigration: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$createMigration$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createMigration"],
            createVersion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$createVersion$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createVersion"],
            defaultIDType: payloadIDType,
            deleteMany: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$deleteMany$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["deleteMany"],
            deleteOne: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$deleteOne$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["deleteOne"],
            deleteVersions: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$deleteVersions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["deleteVersions"],
            deleteWhere: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$deleteWhere$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["deleteWhere"],
            destroy: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$destroy$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["destroy"],
            dropDatabase: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$dropDatabase$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["dropDatabase"],
            execute: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$execute$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["execute"],
            find: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$find$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["find"],
            findGlobal: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$findGlobal$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["findGlobal"],
            findGlobalVersions: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$findGlobalVersions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["findGlobalVersions"],
            findOne: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$findOne$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["findOne"],
            findVersions: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$findVersions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["findVersions"],
            indexes: new Set(),
            init: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$init$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["init"],
            insert: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$insert$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["insert"],
            migrate: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$migrate$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["migrate"],
            migrateDown: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$migrateDown$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["migrateDown"],
            migrateFresh: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$migrateFresh$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["migrateFresh"],
            migrateRefresh: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$migrateRefresh$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["migrateRefresh"],
            migrateReset: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$migrateReset$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["migrateReset"],
            migrateStatus: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$migrateStatus$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["migrateStatus"],
            migrationDir,
            packageName: '@payloadcms/db-postgres',
            payload,
            queryDrafts: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$queryDrafts$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["queryDrafts"],
            rejectInitializing,
            requireDrizzleKit: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$postgres$2f$requireDrizzleKit$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["requireDrizzleKit"],
            resolveInitializing,
            rollbackTransaction: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$transactions$2f$rollbackTransaction$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["rollbackTransaction"],
            updateGlobal: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$updateGlobal$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["updateGlobal"],
            updateGlobalVersion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$updateGlobalVersion$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["updateGlobalVersion"],
            updateOne: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$update$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["updateOne"],
            updateVersion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$updateVersion$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["updateVersion"],
            upsert: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$update$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["updateOne"]
        });
    }
    return {
        defaultIDType: payloadIDType,
        init: adapter
    };
}
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@payloadcms/db-postgres/dist/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$node_modules$2f40$payloadcms$2f$drizzle$2f$dist$2f$exports$2f$postgres$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/node_modules/@payloadcms/drizzle/dist/exports/postgres.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$dist$2f$connect$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/dist/connect.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$db$2d$postgres$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@payloadcms/db-postgres/dist/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/@payloadcms/plugin-nested-docs/dist/fields/breadcrumbs.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "createBreadcrumbsField": (()=>createBreadcrumbsField)
});
const createBreadcrumbsField = (relationTo, overrides = {})=>({
        name: 'breadcrumbs',
        type: 'array',
        localized: true,
        ...overrides || {},
        admin: {
            readOnly: true,
            ...overrides?.admin || {}
        },
        fields: [
            {
                name: 'doc',
                type: 'relationship',
                admin: {
                    disabled: true
                },
                maxDepth: 0,
                relationTo
            },
            {
                type: 'row',
                fields: [
                    {
                        name: 'url',
                        type: 'text',
                        admin: {
                            width: '50%'
                        },
                        label: 'URL'
                    },
                    {
                        name: 'label',
                        type: 'text',
                        admin: {
                            width: '50%'
                        }
                    }
                ]
            },
            ...overrides?.fields || []
        ]
    }); //# sourceMappingURL=breadcrumbs.js.map
}}),
"[project]/node_modules/@payloadcms/plugin-nested-docs/dist/fields/parent.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "createParentField": (()=>createParentField)
});
const createParentField = (relationTo, overrides)=>({
        name: 'parent',
        admin: {
            position: 'sidebar',
            ...overrides?.admin || {}
        },
        // filterOptions are assigned dynamically based on the pluginConfig
        // filterOptions: parentFilterOptions(),
        type: 'relationship',
        maxDepth: 1,
        relationTo,
        ...overrides || {}
    }); //# sourceMappingURL=parent.js.map
}}),
"[project]/node_modules/@payloadcms/plugin-nested-docs/dist/fields/parentFilterOptions.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "parentFilterOptions": (()=>parentFilterOptions)
});
const parentFilterOptions = (breadcrumbsFieldSlug = 'breadcrumbs')=>({ id })=>{
        if (id) {
            return {
                id: {
                    not_equals: id
                },
                [`${breadcrumbsFieldSlug}.doc`]: {
                    not_in: [
                        id
                    ]
                }
            };
        }
        return null;
    }; //# sourceMappingURL=parentFilterOptions.js.map
}}),
"[project]/node_modules/@payloadcms/plugin-nested-docs/dist/utilities/formatBreadcrumb.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "formatBreadcrumb": (()=>formatBreadcrumb)
});
const formatBreadcrumb = (pluginConfig, collection, docs)=>{
    let url = undefined;
    let label;
    const lastDoc = docs[docs.length - 1];
    if (typeof pluginConfig?.generateURL === 'function') {
        url = pluginConfig.generateURL(docs, lastDoc);
    }
    if (typeof pluginConfig?.generateLabel === 'function') {
        label = pluginConfig.generateLabel(docs, lastDoc);
    } else {
        const useAsTitle = collection?.admin?.useAsTitle || 'id';
        label = lastDoc[useAsTitle];
    }
    return {
        doc: lastDoc.id,
        label,
        url
    };
}; //# sourceMappingURL=formatBreadcrumb.js.map
}}),
"[project]/node_modules/@payloadcms/plugin-nested-docs/dist/utilities/getParents.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getParents": (()=>getParents)
});
const getParents = async (req, pluginConfig, collection, doc, docs = [])=>{
    const parentSlug = pluginConfig?.parentFieldSlug || 'parent';
    const parent = doc[parentSlug];
    let retrievedParent;
    if (parent) {
        // If not auto-populated, and we have an ID
        if (typeof parent === 'string' || typeof parent === 'number') {
            retrievedParent = await req.payload.findByID({
                id: parent,
                collection: collection.slug,
                depth: 0,
                disableErrors: true,
                req
            });
        }
        // If auto-populated
        if (typeof parent === 'object') {
            retrievedParent = parent;
        }
        if (retrievedParent) {
            if (retrievedParent[parentSlug]) {
                return getParents(req, pluginConfig, collection, retrievedParent, [
                    retrievedParent,
                    ...docs
                ]);
            }
            return [
                retrievedParent,
                ...docs
            ];
        }
    }
    return docs;
}; //# sourceMappingURL=getParents.js.map
}}),
"[project]/node_modules/@payloadcms/plugin-nested-docs/dist/utilities/populateBreadcrumbs.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "populateBreadcrumbs": (()=>populateBreadcrumbs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$utilities$2f$formatBreadcrumb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/utilities/formatBreadcrumb.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$utilities$2f$getParents$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/utilities/getParents.js [app-route] (ecmascript)");
;
;
const populateBreadcrumbs = async (req, pluginConfig, collection, data, originalDoc)=>{
    const newData = data;
    const breadcrumbDocs = [
        ...await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$utilities$2f$getParents$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getParents"])(req, pluginConfig, collection, {
            ...originalDoc,
            ...data
        })
    ];
    const currentDocBreadcrumb = {
        ...originalDoc,
        ...data
    };
    if (originalDoc?.id) {
        currentDocBreadcrumb.id = originalDoc?.id;
    }
    breadcrumbDocs.push(currentDocBreadcrumb);
    const breadcrumbs = breadcrumbDocs.map((_, i)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$utilities$2f$formatBreadcrumb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["formatBreadcrumb"])(pluginConfig, collection, breadcrumbDocs.slice(0, i + 1)));
    return {
        ...newData,
        [pluginConfig?.breadcrumbsFieldSlug || 'breadcrumbs']: breadcrumbs
    };
}; //# sourceMappingURL=populateBreadcrumbs.js.map
}}),
"[project]/node_modules/@payloadcms/plugin-nested-docs/dist/hooks/resaveChildren.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "resaveChildren": (()=>resaveChildren)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$utilities$2f$populateBreadcrumbs$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/utilities/populateBreadcrumbs.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$errors$2f$APIError$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/errors/APIError.js [app-route] (ecmascript)");
;
;
const resave = async ({ collection, doc, draft, pluginConfig, req })=>{
    const parentSlug = pluginConfig?.parentFieldSlug || 'parent';
    const parentDocIsPublished = doc._status === 'published';
    const children = await req.payload.find({
        collection: collection.slug,
        depth: 0,
        draft,
        locale: req.locale,
        req,
        where: {
            [parentSlug]: {
                equals: doc.id
            }
        }
    });
    const breadcrumbSlug = pluginConfig.breadcrumbsFieldSlug || 'breadcrumbs';
    try {
        await children.docs.reduce(async (priorSave, child)=>{
            await priorSave;
            const childIsPublished = typeof collection.versions === 'object' && collection.versions.drafts && child._status === 'published';
            if (!parentDocIsPublished && childIsPublished) {
                return;
            }
            await req.payload.update({
                id: child.id,
                collection: collection.slug,
                data: {
                    ...child,
                    [breadcrumbSlug]: await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$utilities$2f$populateBreadcrumbs$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["populateBreadcrumbs"])(req, pluginConfig, collection, child)
                },
                depth: 0,
                draft: !childIsPublished,
                locale: req.locale,
                req
            });
        }, Promise.resolve());
    } catch (err) {
        req.payload.logger.error(`Nested Docs plugin has had an error while re-saving a child document${draft ? ' as draft' : ' as published'}.`);
        req.payload.logger.error(err);
        // Use type assertion until we can use instanceof reliably with our Error types
        if (err?.name === 'ValidationError' && err?.data?.errors?.length) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$errors$2f$APIError$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["APIError"]('Could not publish or save changes: One or more children are invalid.', 400);
        }
    }
};
const resaveChildren = (pluginConfig, collection)=>async ({ doc, req })=>{
        await resave({
            collection,
            doc,
            draft: true,
            pluginConfig,
            req
        });
        if (doc._status === 'published') {
            await resave({
                collection,
                doc,
                draft: false,
                pluginConfig,
                req
            });
        }
        return undefined;
    }; //# sourceMappingURL=resaveChildren.js.map
}}),
"[project]/node_modules/@payloadcms/plugin-nested-docs/dist/hooks/resaveSelfAfterCreate.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
// This hook automatically re-saves a document after it is created
// so that we can build its breadcrumbs with the newly created document's ID.
__turbopack_esm__({
    "resaveSelfAfterCreate": (()=>resaveSelfAfterCreate)
});
const resaveSelfAfterCreate = (pluginConfig, collection)=>async ({ doc, operation, req })=>{
        const { locale, payload } = req;
        const breadcrumbSlug = pluginConfig.breadcrumbsFieldSlug || 'breadcrumbs';
        const breadcrumbs = doc[breadcrumbSlug];
        if (operation === 'create') {
            const originalDocWithDepth0 = await payload.findByID({
                id: doc.id,
                collection: collection.slug,
                depth: 0,
                req
            });
            const updateAsDraft = typeof collection.versions === 'object' && collection.versions.drafts && doc._status !== 'published';
            try {
                await payload.update({
                    id: doc.id,
                    collection: collection.slug,
                    data: {
                        ...originalDocWithDepth0,
                        [breadcrumbSlug]: breadcrumbs?.map((crumb, i)=>({
                                ...crumb,
                                doc: breadcrumbs.length === i + 1 ? doc.id : crumb.doc
                            })) || []
                    },
                    depth: 0,
                    draft: updateAsDraft,
                    locale,
                    req
                });
            } catch (err) {
                payload.logger.error(`Nested Docs plugin has had an error while adding breadcrumbs during document creation.`);
                payload.logger.error(err);
            }
        }
        return undefined;
    }; //# sourceMappingURL=resaveSelfAfterCreate.js.map
}}),
"[project]/node_modules/@payloadcms/plugin-nested-docs/dist/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "nestedDocsPlugin": (()=>nestedDocsPlugin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$fields$2f$parentFilterOptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/fields/parentFilterOptions.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$fields$2f$parent$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/fields/parent.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$fields$2f$breadcrumbs$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/fields/breadcrumbs.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$hooks$2f$resaveChildren$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/hooks/resaveChildren.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$hooks$2f$resaveSelfAfterCreate$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/hooks/resaveSelfAfterCreate.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$utilities$2f$populateBreadcrumbs$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/utilities/populateBreadcrumbs.js [app-route] (ecmascript)");
;
;
;
;
;
;
;
;
const nestedDocsPlugin = (pluginConfig)=>(config)=>({
            ...config,
            collections: (config.collections || []).map((collection)=>{
                if (pluginConfig.collections.indexOf(collection.slug) > -1) {
                    const fields = [
                        ...collection?.fields || []
                    ];
                    const existingBreadcrumbField = collection.fields.find((field)=>'name' in field && field.name === (pluginConfig?.breadcrumbsFieldSlug || 'breadcrumbs'));
                    const existingParentField = collection.fields.find((field)=>'name' in field && field.name === (pluginConfig?.parentFieldSlug || 'parent'));
                    const defaultFilterOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$fields$2f$parentFilterOptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parentFilterOptions"])(pluginConfig?.breadcrumbsFieldSlug);
                    if (existingParentField) {
                        if (!existingParentField.filterOptions) {
                            existingParentField.filterOptions = defaultFilterOptions;
                        }
                    }
                    if (!existingParentField && !pluginConfig.parentFieldSlug) {
                        const defaultParentField = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$fields$2f$parent$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createParentField"])(collection.slug);
                        defaultParentField.filterOptions = defaultFilterOptions;
                        fields.push(defaultParentField);
                    }
                    if (!existingBreadcrumbField && !pluginConfig.breadcrumbsFieldSlug) {
                        fields.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$fields$2f$breadcrumbs$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["createBreadcrumbsField"])(collection.slug));
                    }
                    return {
                        ...collection,
                        fields,
                        hooks: {
                            ...collection.hooks || {},
                            afterChange: [
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$hooks$2f$resaveChildren$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resaveChildren"])(pluginConfig, collection),
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$hooks$2f$resaveSelfAfterCreate$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resaveSelfAfterCreate"])(pluginConfig, collection),
                                ...collection?.hooks?.afterChange || []
                            ],
                            beforeChange: [
                                async ({ data, originalDoc, req })=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$utilities$2f$populateBreadcrumbs$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["populateBreadcrumbs"])(req, pluginConfig, collection, data, originalDoc),
                                ...collection?.hooks?.beforeChange || []
                            ]
                        }
                    };
                }
                return collection;
            })
        }); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@payloadcms/plugin-nested-docs/dist/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$fields$2f$breadcrumbs$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/fields/breadcrumbs.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$fields$2f$parent$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/fields/parent.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$fields$2f$parentFilterOptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/fields/parentFilterOptions.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$hooks$2f$resaveChildren$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/hooks/resaveChildren.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$hooks$2f$resaveSelfAfterCreate$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/hooks/resaveSelfAfterCreate.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$utilities$2f$getParents$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/utilities/getParents.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$utilities$2f$populateBreadcrumbs$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/utilities/populateBreadcrumbs.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$plugin$2d$nested$2d$docs$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@payloadcms/plugin-nested-docs/dist/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/calculateDefaultValues/promise.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "defaultValuePromise": (()=>defaultValuePromise)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/fields/config/types.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$getDefaultValue$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/fields/getDefaultValue.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$calculateDefaultValues$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/calculateDefaultValues/iterateFields.js [app-route] (ecmascript)");
;
;
;
const defaultValuePromise = async ({ id, data, field, locale, siblingData, user })=>{
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fieldAffectsData"])(field)) {
        if (typeof siblingData[field.name] === 'undefined' && typeof field.defaultValue !== 'undefined') {
            siblingData[field.name] = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$getDefaultValue$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getDefaultValue"])({
                defaultValue: field.defaultValue,
                locale,
                user,
                value: siblingData[field.name]
            });
        }
    }
    // Traverse subfields
    switch(field.type){
        case 'group':
            {
                if (typeof siblingData[field.name] !== 'object') {
                    siblingData[field.name] = {};
                }
                const groupData = siblingData[field.name];
                await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$calculateDefaultValues$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["iterateFields"])({
                    id,
                    data,
                    fields: field.fields,
                    locale,
                    siblingData: groupData,
                    user
                });
                break;
            }
        case 'array':
            {
                const rows = siblingData[field.name];
                if (Array.isArray(rows)) {
                    const promises = [];
                    rows.forEach((row)=>{
                        promises.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$calculateDefaultValues$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["iterateFields"])({
                            id,
                            data,
                            fields: field.fields,
                            locale,
                            siblingData: row,
                            user
                        }));
                    });
                    await Promise.all(promises);
                }
                break;
            }
        case 'blocks':
            {
                const rows = siblingData[field.name];
                if (Array.isArray(rows)) {
                    const promises = [];
                    rows.forEach((row)=>{
                        const blockTypeToMatch = row.blockType;
                        const block = field.blocks.find((blockType)=>blockType.slug === blockTypeToMatch);
                        if (block) {
                            row.blockType = blockTypeToMatch;
                            promises.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$calculateDefaultValues$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["iterateFields"])({
                                id,
                                data,
                                fields: block.fields,
                                locale,
                                siblingData: row,
                                user
                            }));
                        }
                    });
                    await Promise.all(promises);
                }
                break;
            }
        case 'row':
        case 'collapsible':
            {
                await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$calculateDefaultValues$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["iterateFields"])({
                    id,
                    data,
                    fields: field.fields,
                    locale,
                    siblingData,
                    user
                });
                break;
            }
        case 'tab':
            {
                let tabSiblingData;
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["tabHasName"])(field)) {
                    if (typeof siblingData[field.name] !== 'object') {
                        siblingData[field.name] = {};
                    }
                    tabSiblingData = siblingData[field.name];
                } else {
                    tabSiblingData = siblingData;
                }
                await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$calculateDefaultValues$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["iterateFields"])({
                    id,
                    data,
                    fields: field.fields,
                    locale,
                    siblingData: tabSiblingData,
                    user
                });
                break;
            }
        case 'tabs':
            {
                await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$calculateDefaultValues$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["iterateFields"])({
                    id,
                    data,
                    fields: field.tabs.map((tab)=>({
                            ...tab,
                            type: 'tab'
                        })),
                    locale,
                    siblingData,
                    user
                });
                break;
            }
        default:
            {
                break;
            }
    }
}; //# sourceMappingURL=promise.js.map
}}),
"[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/calculateDefaultValues/iterateFields.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "iterateFields": (()=>iterateFields)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$calculateDefaultValues$2f$promise$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/calculateDefaultValues/promise.js [app-route] (ecmascript)");
;
const iterateFields = async ({ id, data, fields, locale, siblingData, user })=>{
    const promises = [];
    fields.forEach((field)=>{
        promises.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$calculateDefaultValues$2f$promise$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultValuePromise"])({
            id,
            data,
            field,
            locale,
            siblingData,
            user
        }));
    });
    await Promise.all(promises);
}; //# sourceMappingURL=iterateFields.js.map
}}),
"[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/calculateDefaultValues/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "calculateDefaultValues": (()=>calculateDefaultValues)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$calculateDefaultValues$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/calculateDefaultValues/iterateFields.js [app-route] (ecmascript)");
;
const calculateDefaultValues = async ({ id, data, fields, locale, user })=>{
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$calculateDefaultValues$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["iterateFields"])({
        id,
        data,
        fields,
        locale,
        siblingData: data,
        user
    });
    return data;
}; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/getFilterOptionsQuery.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getFilterOptionsQuery": (()=>getFilterOptionsQuery)
});
const getFilterOptionsQuery = async (filterOptions, options)=>{
    const { relationTo } = options;
    const relations = Array.isArray(relationTo) ? relationTo : [
        relationTo
    ];
    const query = {};
    if (typeof filterOptions !== 'undefined') {
        await Promise.all(relations.map(async (relation)=>{
            query[relation] = typeof filterOptions === 'function' ? await filterOptions({
                ...options,
                relationTo: relation
            }) : filterOptions;
            if (query[relation] === true) {
                query[relation] = {};
            }
            // this is an ugly way to prevent results from being returned
            if (query[relation] === false) {
                query[relation] = {
                    id: {
                        exists: false
                    }
                };
            }
        }));
    }
    return query;
}; //# sourceMappingURL=getFilterOptionsQuery.js.map
}}),
"[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/addFieldStatePromise.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "addFieldStatePromise": (()=>addFieldStatePromise)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bson$2d$objectid$2f$objectid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/bson-objectid/objectid.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/fields/config/types.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/iterateFields.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$getFilterOptionsQuery$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/getFilterOptionsQuery.js [app-route] (ecmascript)");
;
;
;
;
const ObjectId = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bson$2d$objectid$2f$objectid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].default || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bson$2d$objectid$2f$objectid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"];
const addFieldStatePromise = async (args)=>{
    const { id, addErrorPathToParent: addErrorPathToParentArg, anyParentLocalized = false, collectionSlug, data, field, fieldIndex, filter, forceFullValue = false, fullData, includeSchema = false, omitParents = false, operation, passesCondition, path, preferences, req, skipConditionChecks = false, skipValidation = false, state } = args;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fieldAffectsData"])(field)) {
        const validate = field.validate;
        const fieldState = {
            errorPaths: [],
            fieldSchema: includeSchema ? field : undefined,
            initialValue: undefined,
            passesCondition,
            valid: true,
            value: undefined
        };
        let validationResult = true;
        if (typeof validate === 'function' && !skipValidation && passesCondition) {
            let jsonError;
            if (field.type === 'json' && typeof data[field.name] === 'string') {
                try {
                    JSON.parse(data[field.name]);
                } catch (e) {
                    jsonError = e;
                }
            }
            validationResult = await validate(data?.[field.name], {
                ...field,
                id,
                collectionSlug,
                data: fullData,
                jsonError,
                operation,
                preferences,
                req,
                siblingData: data
            });
        }
        const addErrorPathToParent = (errorPath)=>{
            if (typeof addErrorPathToParentArg === 'function') {
                addErrorPathToParentArg(errorPath);
            }
            if (!fieldState.errorPaths.includes(errorPath)) {
                fieldState.errorPaths.push(errorPath);
                fieldState.valid = false;
            }
        };
        if (typeof validationResult === 'string') {
            fieldState.errorMessage = validationResult;
            fieldState.valid = false;
            addErrorPathToParent(`${path}${field.name}`);
        } else {
            fieldState.valid = true;
        }
        switch(field.type){
            case 'array':
                {
                    const arrayValue = Array.isArray(data[field.name]) ? data[field.name] : [];
                    const { promises, rowMetadata } = arrayValue.reduce((acc, row, i)=>{
                        const rowPath = `${path}${field.name}.${i}.`;
                        row.id = row?.id || new ObjectId().toHexString();
                        if (!omitParents && (!filter || filter(args))) {
                            state[`${rowPath}id`] = {
                                fieldSchema: includeSchema ? field.fields.find((field)=>'name' in field && field.name === 'id') : undefined,
                                initialValue: row.id,
                                valid: true,
                                value: row.id
                            };
                        }
                        acc.promises.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["iterateFields"])({
                            id,
                            addErrorPathToParent,
                            anyParentLocalized: field.localized || anyParentLocalized,
                            data: row,
                            fields: field.fields,
                            filter,
                            forceFullValue,
                            fullData,
                            includeSchema,
                            omitParents,
                            operation,
                            parentPassesCondition: passesCondition,
                            path: rowPath,
                            preferences,
                            req,
                            skipConditionChecks,
                            skipValidation,
                            state
                        }));
                        const collapsedRowIDs = preferences?.fields?.[`${path}${field.name}`]?.collapsed;
                        acc.rowMetadata.push({
                            id: row.id,
                            collapsed: collapsedRowIDs === undefined ? field.admin.initCollapsed : collapsedRowIDs.includes(row.id)
                        });
                        return acc;
                    }, {
                        promises: [],
                        rowMetadata: []
                    });
                    await Promise.all(promises);
                    // Add values to field state
                    if (data[field.name] === null) {
                        fieldState.value = null;
                        fieldState.initialValue = null;
                    } else {
                        fieldState.value = forceFullValue ? arrayValue : arrayValue.length;
                        fieldState.initialValue = forceFullValue ? arrayValue : arrayValue.length;
                        if (arrayValue.length > 0) {
                            fieldState.disableFormData = true;
                        }
                    }
                    fieldState.rows = rowMetadata;
                    // Add field to state
                    if (!omitParents && (!filter || filter(args))) {
                        state[`${path}${field.name}`] = fieldState;
                    }
                    break;
                }
            case 'blocks':
                {
                    const blocksValue = Array.isArray(data[field.name]) ? data[field.name] : [];
                    const { promises, rowMetadata } = blocksValue.reduce((acc, row, i)=>{
                        const block = field.blocks.find((blockType)=>blockType.slug === row.blockType);
                        const rowPath = `${path}${field.name}.${i}.`;
                        if (block) {
                            row.id = row?.id || new ObjectId().toHexString();
                            if (!omitParents && (!filter || filter(args))) {
                                state[`${rowPath}id`] = {
                                    fieldSchema: includeSchema ? block.fields.find((blockField)=>'name' in blockField && blockField.name === 'id') : undefined,
                                    initialValue: row.id,
                                    valid: true,
                                    value: row.id
                                };
                                state[`${rowPath}blockType`] = {
                                    fieldSchema: includeSchema ? block.fields.find((blockField)=>'name' in blockField && blockField.name === 'blockType') : undefined,
                                    initialValue: row.blockType,
                                    valid: true,
                                    value: row.blockType
                                };
                                state[`${rowPath}blockName`] = {
                                    fieldSchema: includeSchema ? block.fields.find((blockField)=>'name' in blockField && blockField.name === 'blockName') : undefined,
                                    initialValue: row.blockName,
                                    valid: true,
                                    value: row.blockName
                                };
                            }
                            acc.promises.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["iterateFields"])({
                                id,
                                addErrorPathToParent,
                                anyParentLocalized: field.localized || anyParentLocalized,
                                data: row,
                                fields: block.fields,
                                filter,
                                forceFullValue,
                                fullData,
                                includeSchema,
                                omitParents,
                                operation,
                                parentPassesCondition: passesCondition,
                                path: rowPath,
                                preferences,
                                req,
                                skipConditionChecks,
                                skipValidation,
                                state
                            }));
                            const collapsedRowIDs = preferences?.fields?.[`${path}${field.name}`]?.collapsed;
                            acc.rowMetadata.push({
                                id: row.id,
                                blockType: row.blockType,
                                collapsed: collapsedRowIDs === undefined ? field.admin.initCollapsed : collapsedRowIDs.includes(row.id)
                            });
                        }
                        return acc;
                    }, {
                        promises: [],
                        rowMetadata: []
                    });
                    await Promise.all(promises);
                    // Add values to field state
                    if (data[field.name] === null) {
                        fieldState.value = null;
                        fieldState.initialValue = null;
                    } else {
                        fieldState.value = forceFullValue ? blocksValue : blocksValue.length;
                        fieldState.initialValue = forceFullValue ? blocksValue : blocksValue.length;
                        if (blocksValue.length > 0) {
                            fieldState.disableFormData = true;
                        }
                    }
                    fieldState.rows = rowMetadata;
                    // Add field to state
                    if (!omitParents && (!filter || filter(args))) {
                        state[`${path}${field.name}`] = fieldState;
                    }
                    break;
                }
            case 'group':
                {
                    if (!filter || filter(args)) {
                        fieldState.disableFormData = true;
                        state[`${path}${field.name}`] = fieldState;
                    }
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["iterateFields"])({
                        id,
                        addErrorPathToParent,
                        anyParentLocalized: field.localized || anyParentLocalized,
                        data: data?.[field.name] || {},
                        fields: field.fields,
                        filter,
                        forceFullValue,
                        fullData,
                        includeSchema,
                        omitParents,
                        operation,
                        parentPassesCondition: passesCondition,
                        path: `${path}${field.name}.`,
                        preferences,
                        req,
                        skipConditionChecks,
                        skipValidation,
                        state
                    });
                    break;
                }
            case 'upload':
            case 'relationship':
                {
                    if (field.filterOptions) {
                        if (typeof field.filterOptions === 'object') {
                            if (typeof field.relationTo === 'string') {
                                fieldState.filterOptions = {
                                    [field.relationTo]: field.filterOptions
                                };
                            } else {
                                fieldState.filterOptions = field.relationTo.reduce((acc, relation)=>{
                                    acc[relation] = field.filterOptions;
                                    return acc;
                                }, {});
                            }
                        }
                        if (typeof field.filterOptions === 'function') {
                            const query = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$getFilterOptionsQuery$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getFilterOptionsQuery"])(field.filterOptions, {
                                id,
                                data: fullData,
                                relationTo: field.relationTo,
                                siblingData: data,
                                user: req.user
                            });
                            fieldState.filterOptions = query;
                        }
                    }
                    if (field.hasMany) {
                        const relationshipValue = Array.isArray(data[field.name]) ? data[field.name].map((relationship)=>{
                            if (Array.isArray(field.relationTo)) {
                                return {
                                    relationTo: relationship.relationTo,
                                    value: relationship.value && typeof relationship.value === 'object' ? relationship.value?.id : relationship.value
                                };
                            }
                            if (typeof relationship === 'object' && relationship !== null) {
                                return relationship.id;
                            }
                            return relationship;
                        }) : undefined;
                        fieldState.value = relationshipValue;
                        fieldState.initialValue = relationshipValue;
                    } else if (Array.isArray(field.relationTo)) {
                        if (data[field.name] && typeof data[field.name] === 'object' && 'relationTo' in data[field.name] && 'value' in data[field.name]) {
                            const value = typeof data[field.name]?.value === 'object' && data[field.name]?.value && 'id' in data[field.name].value ? data[field.name].value.id : data[field.name].value;
                            const relationshipValue = {
                                relationTo: data[field.name]?.relationTo,
                                value
                            };
                            fieldState.value = relationshipValue;
                            fieldState.initialValue = relationshipValue;
                        }
                    } else {
                        const relationshipValue = data[field.name] && typeof data[field.name] === 'object' && 'id' in data[field.name] ? data[field.name].id : data[field.name];
                        fieldState.value = relationshipValue;
                        fieldState.initialValue = relationshipValue;
                    }
                    if (!filter || filter(args)) {
                        state[`${path}${field.name}`] = fieldState;
                    }
                    break;
                }
            default:
                {
                    fieldState.value = data[field.name];
                    fieldState.initialValue = data[field.name];
                    // Add field to state
                    if (!filter || filter(args)) {
                        state[`${path}${field.name}`] = fieldState;
                    }
                    break;
                }
        }
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fieldHasSubFields"])(field)) {
        // Handle field types that do not use names (row, etc)
        if (!filter || filter(args)) {
            state[`${path}_index-${fieldIndex}`] = {
                disableFormData: true,
                errorPaths: [],
                initialValue: undefined,
                passesCondition,
                valid: true,
                value: undefined
            };
        }
        await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["iterateFields"])({
            id,
            // passthrough parent functionality
            addErrorPathToParent: addErrorPathToParentArg,
            anyParentLocalized: field.localized || anyParentLocalized,
            data,
            fields: field.fields,
            filter,
            forceFullValue,
            fullData,
            includeSchema,
            omitParents,
            operation,
            parentPassesCondition: passesCondition,
            path,
            preferences,
            req,
            skipConditionChecks,
            skipValidation,
            state
        });
    } else if (field.type === 'tabs') {
        const promises = field.tabs.map((tab)=>{
            const isNamedTab = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["tabHasName"])(tab);
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["iterateFields"])({
                id,
                // passthrough parent functionality
                addErrorPathToParent: addErrorPathToParentArg,
                anyParentLocalized: tab.localized || anyParentLocalized,
                data: isNamedTab ? data?.[tab.name] || {} : data,
                fields: tab.fields,
                filter,
                forceFullValue,
                fullData,
                includeSchema,
                omitParents,
                operation,
                parentPassesCondition: passesCondition,
                path: isNamedTab ? `${path}${tab.name}.` : path,
                preferences,
                req,
                skipConditionChecks,
                skipValidation,
                state
            });
        });
        await Promise.all(promises);
    } else if (field.type === 'ui') {
        if (!filter || filter(args)) {
            state[`${path}_index-${fieldIndex}`] = {
                disableFormData: true,
                errorPaths: [],
                initialValue: undefined,
                passesCondition,
                valid: true,
                value: undefined
            };
        }
    }
}; //# sourceMappingURL=addFieldStatePromise.js.map
}}),
"[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/iterateFields.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "iterateFields": (()=>iterateFields)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/fields/config/types.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$addFieldStatePromise$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/addFieldStatePromise.js [app-route] (ecmascript)");
;
;
const iterateFields = async ({ id, addErrorPathToParent: addErrorPathToParentArg, anyParentLocalized = false, collectionSlug, data, fields, filter, forceFullValue = false, fullData, includeSchema = false, omitParents = false, operation, parentPassesCondition = true, path = '', preferences, req, skipConditionChecks = false, skipValidation = false, state = {} })=>{
    const promises = [];
    fields.forEach((field, fieldIndex)=>{
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fieldIsPresentationalOnly"])(field) && !field?.admin?.disabled) {
            let passesCondition = true;
            if (!skipConditionChecks) {
                passesCondition = Boolean((field?.admin?.condition ? Boolean(field.admin.condition(fullData || {}, data || {}, {
                    user: req.user
                })) : true) && parentPassesCondition);
            }
            promises.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$addFieldStatePromise$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["addFieldStatePromise"])({
                id,
                addErrorPathToParent: addErrorPathToParentArg,
                anyParentLocalized,
                collectionSlug,
                data,
                field,
                fieldIndex,
                filter,
                forceFullValue,
                fullData,
                includeSchema,
                omitParents,
                operation,
                passesCondition,
                path,
                preferences,
                req,
                skipConditionChecks,
                skipValidation,
                state
            }));
        }
    });
    await Promise.all(promises);
}; //# sourceMappingURL=iterateFields.js.map
}}),
"[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "buildStateFromSchema": (()=>buildStateFromSchema)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$calculateDefaultValues$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/calculateDefaultValues/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/iterateFields.js [app-route] (ecmascript)");
;
;
const buildStateFromSchema = async (args)=>{
    const { id, collectionSlug, data: fullData = {}, fieldSchema, operation, preferences, req } = args;
    if (fieldSchema) {
        const state = {};
        const dataWithDefaultValues = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$calculateDefaultValues$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["calculateDefaultValues"])({
            id,
            data: fullData,
            fields: fieldSchema,
            locale: req.locale,
            siblingData: fullData,
            user: req.user
        });
        await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$iterateFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["iterateFields"])({
            id,
            addErrorPathToParent: null,
            collectionSlug,
            data: dataWithDefaultValues,
            fields: fieldSchema,
            fullData,
            operation,
            parentPassesCondition: true,
            path: '',
            preferences,
            req,
            state
        });
        return state;
    }
    return {};
};
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@payloadcms/ui/dist/utilities/buildFieldSchemaMap/traverseFields.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "traverseFields": (()=>traverseFields)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$errors$2f$MissingEditorProp$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/errors/MissingEditorProp.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/fields/config/types.js [app-route] (ecmascript)");
;
;
const traverseFields = ({ config, fields, i18n, schemaMap, schemaPath })=>{
    for (const field of fields){
        switch(field.type){
            case 'group':
            case 'array':
                schemaMap.set(`${schemaPath}.${field.name}`, field.fields);
                traverseFields({
                    config,
                    fields: field.fields,
                    i18n,
                    schemaMap,
                    schemaPath: `${schemaPath}.${field.name}`
                });
                break;
            case 'collapsible':
            case 'row':
                traverseFields({
                    config,
                    fields: field.fields,
                    i18n,
                    schemaMap,
                    schemaPath
                });
                break;
            case 'blocks':
                field.blocks.map((block)=>{
                    const blockSchemaPath = `${schemaPath}.${field.name}.${block.slug}`;
                    schemaMap.set(blockSchemaPath, block.fields);
                    traverseFields({
                        config,
                        fields: block.fields,
                        i18n,
                        schemaMap,
                        schemaPath: blockSchemaPath
                    });
                });
                break;
            case 'richText':
                if (!field?.editor) {
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$errors$2f$MissingEditorProp$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MissingEditorProp"](field) // while we allow disabling editor functionality, you should not have any richText fields defined if you do not have an editor
                    ;
                }
                if (typeof field.editor === 'function') {
                    throw new Error('Attempted to access unsanitized rich text editor.');
                }
                if (typeof field.editor.generateSchemaMap === 'function') {
                    field.editor.generateSchemaMap({
                        config,
                        field,
                        i18n,
                        schemaMap,
                        schemaPath: `${schemaPath}.${field.name}`
                    });
                }
                break;
            case 'tabs':
                field.tabs.map((tab)=>{
                    const tabSchemaPath = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["tabHasName"])(tab) ? `${schemaPath}.${tab.name}` : schemaPath;
                    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["tabHasName"])(tab)) {
                        schemaMap.set(tabSchemaPath, tab.fields);
                    }
                    traverseFields({
                        config,
                        fields: tab.fields,
                        i18n,
                        schemaMap,
                        schemaPath: tabSchemaPath
                    });
                });
                break;
        }
    }
}; //# sourceMappingURL=traverseFields.js.map
}}),
"[project]/node_modules/@payloadcms/ui/dist/utilities/buildFieldSchemaMap/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "buildFieldSchemaMap": (()=>buildFieldSchemaMap)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$validations$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/fields/validations.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$utilities$2f$buildFieldSchemaMap$2f$traverseFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/ui/dist/utilities/buildFieldSchemaMap/traverseFields.js [app-route] (ecmascript)");
;
;
const buildFieldSchemaMap = (args)=>{
    const { config, i18n } = args;
    const result = new Map();
    config.collections.forEach((collection)=>{
        if (collection.auth && !collection.auth.disableLocalStrategy) {
            // register schema with auth schemaPath
            const baseAuthFields = [
                {
                    name: 'password',
                    type: 'text',
                    label: i18n.t('general:password'),
                    required: true,
                    validate: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$validations$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["password"]
                },
                {
                    name: 'confirm-password',
                    type: 'text',
                    label: i18n.t('authentication:confirmPassword'),
                    required: true,
                    validate: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$fields$2f$validations$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["confirmPassword"]
                }
            ];
            result.set(`_${collection.slug}.auth`, [
                ...collection.fields,
                ...baseAuthFields
            ]);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$utilities$2f$buildFieldSchemaMap$2f$traverseFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["traverseFields"])({
            config,
            fields: collection.fields,
            i18n,
            schemaMap: result,
            schemaPath: collection.slug
        });
    });
    config.globals.forEach((global)=>{
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$utilities$2f$buildFieldSchemaMap$2f$traverseFields$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["traverseFields"])({
            config,
            fields: global.fields,
            i18n,
            schemaMap: result,
            schemaPath: global.slug
        });
    });
    return result;
}; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@payloadcms/ui/dist/utilities/buildFormState.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "buildFormState": (()=>buildFormState),
    "getFieldSchemaMap": (()=>getFieldSchemaMap)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$utilities$2f$buildFieldSchemaMap$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/ui/dist/utilities/buildFieldSchemaMap/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$utilities$2f$reduceFieldsToValues$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/utilities/reduceFieldsToValues.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@payloadcms/ui/dist/forms/buildStateFromSchema/index.js [app-route] (ecmascript) <locals>");
;
;
;
let cached = global._payload_fieldSchemaMap;
if (!cached) {
    cached = global._payload_fieldSchemaMap = null;
}
const getFieldSchemaMap = (req)=>{
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    cached = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$utilities$2f$buildFieldSchemaMap$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["buildFieldSchemaMap"])({
        config: req.payload.config,
        i18n: req.i18n
    });
    return cached;
};
const buildFormState = async ({ req })=>{
    const reqData = req.data || {};
    const { collectionSlug, formState, globalSlug, locale, operation, returnLockStatus, schemaPath, updateLastEdited } = reqData;
    const incomingUserSlug = req.user?.collection;
    const adminUserSlug = req.payload.config.admin.user;
    // If we have a user slug, test it against the functions
    if (incomingUserSlug) {
        const adminAccessFunction = req.payload.collections[incomingUserSlug].config.access?.admin;
        // Run the admin access function from the config if it exists
        if (adminAccessFunction) {
            const canAccessAdmin = await adminAccessFunction({
                req
            });
            if (!canAccessAdmin) {
                throw new Error('Unauthorized');
            }
        // Match the user collection to the global admin config
        } else if (adminUserSlug !== incomingUserSlug) {
            throw new Error('Unauthorized');
        }
    } else {
        const hasUsers = await req.payload.find({
            collection: adminUserSlug,
            depth: 0,
            limit: 1,
            pagination: false
        });
        // If there are users, we should not allow access because of /create-first-user
        if (hasUsers.docs.length) {
            throw new Error('Unauthorized');
        }
    }
    const fieldSchemaMap = getFieldSchemaMap(req);
    const id = collectionSlug ? reqData.id : undefined;
    const schemaPathSegments = schemaPath && schemaPath.split('.');
    let fieldSchema;
    if (schemaPathSegments && schemaPathSegments.length === 1) {
        if (req.payload.collections[schemaPath]) {
            fieldSchema = req.payload.collections[schemaPath].config.fields;
        } else {
            fieldSchema = req.payload.config.globals.find((global1)=>global1.slug === schemaPath)?.fields;
        }
    } else if (fieldSchemaMap.has(schemaPath)) {
        fieldSchema = fieldSchemaMap.get(schemaPath);
    }
    if (!fieldSchema) {
        throw new Error(`Could not find field schema for given path "${schemaPath}"`);
    }
    let docPreferences = reqData.docPreferences;
    let data = reqData.data;
    const promises = {};
    // If the request does not include doc preferences,
    // we should fetch them. This is useful for DocumentInfoProvider
    // as it reduces the amount of client-side fetches necessary
    // when we fetch data for the Edit View
    if (!docPreferences) {
        let preferencesKey;
        if (collectionSlug && id) {
            preferencesKey = `collection-${collectionSlug}-${id}`;
        }
        if (globalSlug) {
            preferencesKey = `global-${globalSlug}`;
        }
        if (preferencesKey) {
            const fetchPreferences = async ()=>{
                const preferencesResult = await req.payload.find({
                    collection: 'payload-preferences',
                    depth: 0,
                    limit: 1,
                    where: {
                        and: [
                            {
                                key: {
                                    equals: preferencesKey
                                }
                            },
                            {
                                'user.relationTo': {
                                    equals: req.user.collection
                                }
                            },
                            {
                                'user.value': {
                                    equals: req.user.id
                                }
                            }
                        ]
                    }
                });
                if (preferencesResult?.docs?.[0]?.value) {
                    docPreferences = preferencesResult.docs[0].value;
                }
            };
            promises.preferences = fetchPreferences();
        }
    }
    // If there is a form state,
    // then we can deduce data from that form state
    if (formState) {
        data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$utilities$2f$reduceFieldsToValues$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["reduceFieldsToValues"])(formState, true);
    }
    // If we do not have data at this point,
    // we can fetch it. This is useful for DocumentInfoProvider
    // to reduce the amount of fetches required
    if (!data) {
        const fetchData = async ()=>{
            let resolvedData;
            if (collectionSlug && id) {
                resolvedData = await req.payload.findByID({
                    id,
                    collection: collectionSlug,
                    depth: 0,
                    draft: true,
                    fallbackLocale: null,
                    locale,
                    overrideAccess: false,
                    user: req.user
                });
            }
            if (globalSlug && schemaPath === globalSlug) {
                resolvedData = await req.payload.findGlobal({
                    slug: globalSlug,
                    depth: 0,
                    draft: true,
                    fallbackLocale: null,
                    locale,
                    overrideAccess: false,
                    user: req.user
                });
            }
            data = resolvedData;
        };
        promises.data = fetchData();
    }
    if (Object.keys(promises) && Object.keys(promises).length > 0) {
        await Promise.all(Object.values(promises));
    }
    const result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$ui$2f$dist$2f$forms$2f$buildStateFromSchema$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["buildStateFromSchema"])({
        id,
        collectionSlug,
        data,
        fieldSchema,
        operation,
        preferences: docPreferences || {
            fields: {}
        },
        req
    });
    // Maintain form state of auth / upload fields
    if (collectionSlug && formState) {
        if (req.payload.collections[collectionSlug]?.config?.upload && formState.file) {
            result.file = formState.file;
        }
    }
    if (returnLockStatus && req.user && (id || globalSlug)) {
        let lockedDocumentQuery;
        if (collectionSlug) {
            lockedDocumentQuery = {
                and: [
                    {
                        'document.relationTo': {
                            equals: collectionSlug
                        }
                    },
                    {
                        'document.value': {
                            equals: id
                        }
                    }
                ]
            };
        } else if (globalSlug) {
            lockedDocumentQuery = {
                globalSlug: {
                    equals: globalSlug
                }
            };
        }
        if (lockedDocumentQuery) {
            const lockedDocument = await req.payload.find({
                collection: 'payload-locked-documents',
                depth: 1,
                limit: 1,
                pagination: false,
                where: lockedDocumentQuery
            });
            if (lockedDocument.docs && lockedDocument.docs.length > 0) {
                const lockedState = {
                    isLocked: true,
                    user: lockedDocument.docs[0]?.user?.value
                };
                if (updateLastEdited) {
                    await req.payload.db.updateOne({
                        id: lockedDocument.docs[0].id,
                        collection: 'payload-locked-documents',
                        data: {},
                        req
                    });
                }
                return {
                    lockedState,
                    state: result
                };
            } else {
                // If no lock document exists, create it
                await req.payload.db.create({
                    collection: 'payload-locked-documents',
                    data: {
                        document: collectionSlug ? {
                            relationTo: [
                                collectionSlug
                            ],
                            value: id
                        } : undefined,
                        globalSlug: globalSlug ? globalSlug : undefined,
                        user: {
                            relationTo: [
                                req.user.collection
                            ],
                            value: req.user.id
                        }
                    },
                    req
                });
                const lockedState = {
                    isLocked: true,
                    user: req.user
                };
                return {
                    lockedState,
                    state: result
                };
            }
        }
    }
    return {
        state: result
    };
}; //# sourceMappingURL=buildFormState.js.map
}}),
"[project]/node_modules/@payloadcms/ui/dist/exports/shared/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "EntityType": (()=>L),
    "PayloadIcon": (()=>H),
    "PayloadLogo": (()=>j),
    "RenderComponent": (()=>h),
    "Translation": (()=>F),
    "WithServerSideProps": (()=>$),
    "findLocaleFromCode": (()=>B),
    "formatAdminURL": (()=>C),
    "formatDate": (()=>S),
    "formatDocTitle": (()=>W),
    "getComponent": (()=>P),
    "getCreateMappedComponent": (()=>E),
    "getFormState": (()=>z),
    "groupNavItems": (()=>J),
    "handleBackToDashboard": (()=>K),
    "handleGoBack": (()=>Q),
    "handleTakeOver": (()=>Y),
    "hasSavePermission": (()=>_),
    "isEditing": (()=>X),
    "requests": (()=>Z),
    "withMergedProps": (()=>k)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$exports$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@payloadcms/translations/dist/exports/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$utilities$2f$isReactComponent$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/utilities/isReactComponent.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/config/types.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$bin$2f$generateImportMap$2f$parsePayloadComponent$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/payload/dist/bin/generateImportMap/parsePayloadComponent.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$qs$2d$esm$2f$lib$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/qs-esm/lib/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$date$2d$fns$2f$format$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/date-fns/format.mjs [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$utilities$2f$getTranslation$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@payloadcms/translations/dist/utilities/getTranslation.js [app-route] (ecmascript)");
;
var R = ({ elements: o, translationString: t })=>{
    let e = /(<[^>]+>.*?<\/[^>]+>)/g, n = t.split(e);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.createElement("span", null, n.map((r, i)=>{
        if (o && r.startsWith("<") && r.endsWith(">")) {
            let s = r[1], a = o[s];
            if (a) {
                let p = new RegExp(`<${s}>(.*?)</${s}>`, "g"), l = r.replace(p, (m, c)=>c);
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.createElement(a, {
                    key: i
                }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.createElement(R, {
                    translationString: l
                }));
            }
        }
        return r;
    }));
}, F = ({ elements: o, i18nKey: t, t: e, variables: n })=>{
    let r = e(t, n || {});
    return o ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.createElement(R, {
        elements: o,
        translationString: r
    }) : r;
};
;
;
function k({ Component: o, sanitizeServerOnlyProps: t, toMergeIntoProps: e }) {
    return t === void 0 && (t = !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$utilities$2f$isReactComponent$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isReactServerComponentOrFunction"])(o)), (r)=>{
        let i = D(r, e);
        return t && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$config$2f$types$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["serverProps"].forEach((s)=>{
            delete i[s];
        }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement(o, {
            ...i
        });
    };
}
function D(o, t) {
    return {
        ...o,
        ...t
    };
}
;
;
var $ = ({ Component: o, serverOnlyProps: t, ...e })=>o ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement((r)=>{
        let i = {
            ...r,
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$utilities$2f$isReactComponent$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isReactServerComponentOrFunction"])(o) ? t ?? {} : {}
        };
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement(o, {
            ...i
        });
    }, {
        ...e
    }) : null;
;
var H = ({ fill: o })=>{
    let t = o || "var(--theme-elevation-1000)";
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("svg", {
        className: "graphic-icon",
        height: "100%",
        viewBox: "0 0 25 25",
        width: "100%",
        xmlns: "http://www.w3.org/2000/svg"
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: "M11.5293 0L23 6.90096V19.9978L14.3608 25V11.9032L2.88452 5.00777L11.5293 0Z",
        fill: t
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: "M10.6559 24.2727V14.0518L2 19.0651L10.6559 24.2727Z",
        fill: t
    }));
};
;
var V = `
  .graphic-logo path {
    fill: var(--theme-elevation-1000);
  }
`, j = ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("svg", {
        className: "graphic-logo",
        fill: "none",
        height: "50",
        viewBox: "0 0 180 50",
        width: "180",
        xmlns: "http://www.w3.org/2000/svg"
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("style", null, V), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: "M65.922 13.8685C71.1075 13.8685 77.0257 14.6014 77.0257 22.2185C77.0257 28.6587 71.8736 30.2243 66.0664 30.2243H62.2689V39.0961H57.2944V13.8685H65.922ZM62.2689 17.7659V26.3602H66.3773C69.4752 26.3602 71.9069 25.594 71.9069 22.2518C71.9069 18.1101 68.7424 17.7659 66.022 17.7659H62.2689Z"
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: "M84.3209 39.5514C80.7344 39.5514 77.5698 37.4639 77.5698 34.0884C77.5698 29.6358 82.5443 28.3145 89.8949 27.4706V27.1264C89.8949 24.2394 88.3626 23.2623 86.3084 23.2623C84.2542 23.2623 82.7219 24.2394 82.622 26.2936H78.1361C78.4803 22.6072 81.7226 19.8867 86.4861 19.8867C91.1163 19.8867 94.7028 21.7633 94.7028 28.1035C94.7028 28.692 94.6362 31.2014 94.6362 32.9114C94.6362 35.865 94.8472 37.5416 95.1914 39.1073H90.7721C90.6278 38.5188 90.4945 37.6083 90.4279 36.7089C89.0844 38.6853 87.1412 39.5514 84.3209 39.5514ZM90.0282 30.5463C84.6651 31.1015 82.511 31.7344 82.511 33.8219C82.511 35.1766 83.588 36.298 85.7532 36.298C88.7512 36.298 90.0393 34.5547 90.0393 31.4901V30.5463H90.0282Z"
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: "M97.2899 45.1921V41.5057H99.0998C100.699 41.5057 101.432 41.539 102.231 39.5514L102.442 39.0295L95.269 20.3753H100.521L104.763 33.8774L109.115 20.3753H113.99L107.139 38.541C104.951 44.3593 103.974 45.1921 99.3108 45.1921H97.2899Z"
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: "M120.263 39.1073H115.456V13.8685H120.263V39.1073Z"
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: "M122.406 29.7801C122.406 23.2067 126.826 19.9645 131.7 19.9645C136.575 19.9645 140.994 23.2067 140.994 29.7801C140.994 36.3535 136.575 39.5625 131.7 39.5625C126.826 39.5514 122.406 36.3535 122.406 29.7801ZM127.281 29.7801C127.281 33.6775 128.913 35.7984 131.7 35.7984C134.487 35.7984 136.119 33.6775 136.119 29.7801C136.119 25.8494 134.487 23.7286 131.7 23.7286C128.913 23.7286 127.281 25.8383 127.281 29.7801Z"
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: "M149.167 39.5514C145.58 39.5514 142.416 37.4639 142.416 34.0884C142.416 29.6358 147.39 28.3145 154.741 27.4706V27.1264C154.741 24.2394 153.208 23.2623 151.154 23.2623C149.1 23.2623 147.568 24.2394 147.468 26.2936H142.982C143.326 22.6072 146.568 19.8867 151.332 19.8867C155.962 19.8867 159.549 21.7633 159.549 28.1035C159.549 28.692 159.482 31.2014 159.482 32.9114C159.482 35.865 159.693 37.5416 160.037 39.1073H155.618C155.473 38.5188 155.34 37.6083 155.274 36.7089C153.941 38.6853 151.987 39.5514 149.167 39.5514ZM154.874 30.5463C149.511 31.1015 147.357 31.7344 147.357 33.8219C147.357 35.1766 148.434 36.298 150.599 36.298C153.597 36.298 154.885 34.5547 154.885 31.4901V30.5463H154.874Z"
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: "M175.06 39.1073V36.7422C173.872 38.7964 171.618 39.5625 169.664 39.5625C165.067 39.5625 161.625 35.7317 161.625 29.7468C161.625 23.8619 165 19.9645 169.664 19.9645C172.029 19.9645 174.05 21.0415 175.06 22.7848V13.8796H179.868V39.1073H175.06ZM175.238 29.7357C175.238 25.9716 173.494 23.6398 170.852 23.6398C168.242 23.6398 166.677 26.1159 166.677 29.7691C166.677 33.4222 168.242 35.865 170.852 35.865C173.494 35.865 175.238 33.5665 175.238 29.7357Z"
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: "M19.1531 0L42.049 13.8019V39.9956L24.8049 50V23.8064L1.89795 10.0155L19.1531 0Z"
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement("path", {
        d: "M17.4097 48.5454V28.1035L0.132324 38.1301L17.4097 48.5454Z"
    }));
;
var P = ({ identifier: o, importMap: t, payloadComponent: e, silent: n })=>{
    if (!e) return {
        clientProps: void 0,
        Component: void 0,
        serverProps: void 0
    };
    let { exportName: r, path: i } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$bin$2f$generateImportMap$2f$parsePayloadComponent$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePayloadComponent"])(e), s = i + "#" + r, a = t[s];
    return !a && !n && console.error("getComponent: Component not found in importMap", {
        identifier: o,
        key: s,
        payloadComponent: e
    }, "You may need to run the `payload generate:importmap` command to generate the importMap ahead of runtime."), {
        clientProps: typeof e == "object" ? e.clientProps : void 0,
        Component: a,
        serverProps: typeof e == "object" ? e.serverProps : void 0
    };
};
;
;
function E({ importMap: o, serverProps: t }) {
    let e = (r, i, s, a, p)=>{
        let { clientProps: l, serverProps: m } = s || {};
        if (r == null) {
            if (!a) return;
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$utilities$2f$isReactComponent$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isReactServerComponentOrFunction"])(a)) return {
                type: "server",
                Component: null,
                RenderedComponent: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement(a, {
                    key: i,
                    ...t,
                    ...m,
                    ...l
                })
            };
            {
                let g = {
                    type: "client",
                    Component: a
                };
                return l && (g.props = l), g;
            }
        }
        if (r === !1) return {
            type: "empty"
        };
        let c = r && typeof r == "object" && "ReactComponent" in r ? {
            Component: r.ReactComponent
        } : P({
            identifier: p,
            importMap: o,
            payloadComponent: r
        });
        if (c.Component || console.error("getCreateMappedComponent: Component not found in importMap", {
            identifier: p,
            key: i
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$utilities$2f$isReactComponent$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isReactServerComponentOrFunction"])(c.Component)) {
            let g = c.Component;
            return {
                type: "server",
                Component: null,
                RenderedComponent: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement(g, {
                    key: i,
                    ...t,
                    ...c.serverProps,
                    ...m,
                    ...l
                })
            };
        } else return c.Component ? {
            type: "client",
            Component: c.Component,
            props: {
                ...c.clientProps || {},
                ...l
            }
        } : void 0;
    };
    return (r, i, s, a)=>{
        if (!(r == null && !s)) if (r && Array.isArray(r)) {
            let p = [];
            for(let l = 0; l < r.length; l++){
                let m = e(r[l], l, i, s, a);
                p.push(m);
            }
            return p;
        } else return e(r, void 0, i, s, a);
    };
}
;
;
var h = ({ clientProps: o = {}, Component: t, mappedComponent: e, serverProps: n })=>{
    if (!e && t) {
        if (Array.isArray(t)) return t.map((i, s)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement(h, {
                clientProps: o,
                Component: i,
                key: s,
                serverProps: n
            }));
        let r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$payload$2f$dist$2f$utilities$2f$isReactComponent$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isReactServerComponentOrFunction"])(t) ? {
            type: "server",
            Component: t,
            RenderedComponent: null
        } : {
            type: "client",
            Component: t
        };
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement(h, {
            clientProps: o,
            mappedComponent: r,
            serverProps: n
        });
    }
    return e ? Array.isArray(e) ? e.map((r, i)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement(h, {
            clientProps: o,
            key: i,
            mappedComponent: r,
            serverProps: n
        })) : e.type === "empty" ? null : e.RenderedComponent ? e.RenderedComponent : e.Component ? e.type === "server" ? e.props ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement(e.Component, {
        ...e.props,
        ...n,
        ...o
    }) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement(e.Component, {
        ...n,
        ...o
    }) : e.props ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement(e.Component, {
        ...e.props,
        ...o
    }) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].createElement(e.Component, {
        ...o
    }) : null : null;
};
;
var Z = {
    delete: (o, t = {
        headers: {}
    })=>{
        let e = t && t.headers ? {
            ...t.headers
        } : {}, n = {
            ...t,
            credentials: "include",
            headers: {
                ...e
            },
            method: "delete"
        };
        return fetch(o, n);
    },
    get: (o, t = {
        headers: {}
    })=>{
        let e = "";
        return t.params && (e = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$qs$2d$esm$2f$lib$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.stringify(t.params, {
            addQueryPrefix: !0
        })), fetch(`${o}${e}`, {
            credentials: "include",
            ...t
        });
    },
    patch: (o, t = {
        headers: {}
    })=>{
        let e = t && t.headers ? {
            ...t.headers
        } : {}, n = {
            ...t,
            credentials: "include",
            headers: {
                ...e
            },
            method: "PATCH"
        };
        return fetch(o, n);
    },
    post: (o, t = {
        headers: {}
    })=>{
        let e = t && t.headers ? {
            ...t.headers
        } : {}, n = {
            ...t,
            credentials: "include",
            headers: {
                ...e
            },
            method: "post"
        };
        return fetch(`${o}`, n);
    },
    put: (o, t = {
        headers: {}
    })=>{
        let e = t && t.headers ? {
            ...t.headers
        } : {}, n = {
            ...t,
            credentials: "include",
            headers: {
                ...e
            },
            method: "put"
        };
        return fetch(o, n);
    }
};
var B = (o, t)=>!o?.locales || o.locales.length === 0 ? null : o.locales.find((e)=>e?.code === t);
var C = (o)=>{
    let { adminRoute: t, basePath: e = "", path: n, serverURL: r } = o;
    if (t) if (t === "/") {
        if (!n) return `${r || ""}${e}${t}`;
    } else return `${r || ""}${e}${t}${n}`;
    return `${r || ""}${e}${n}`;
};
;
var S = ({ date: o, i18n: t, pattern: e })=>{
    let n = new Date(o);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$date$2d$fns$2f$format$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["format"])(n, e, {
        locale: t.dateFNS
    });
};
;
var W = ({ collectionConfig: o, data: t, dateFormat: e, fallback: n, globalConfig: r, i18n: i })=>{
    let s;
    if (o) {
        let a = o?.admin?.useAsTitle;
        if (a && (s = t?.[a] || s, s)) {
            let p = o.fields.find((m)=>"name" in m && m.name === a);
            if (p?.type === "date") {
                let m = "date" in p.admin && p?.admin?.date?.displayFormat || e;
                s = S({
                    date: s,
                    i18n: i,
                    pattern: m
                }) || s;
            }
        }
    }
    return r && (s = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$utilities$2f$getTranslation$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getTranslation"])(r?.label, i) || r?.slug), s || (s = n || `[${i.t("general:untitled")}]`), s;
};
var z = async (o)=>{
    let { apiRoute: t, body: e, onError: n, serverURL: r, signal: i, token: s } = o, a = await fetch(`${r}${t}/form-state`, {
        body: JSON.stringify(e),
        credentials: "include",
        headers: {
            "Content-Type": "application/json",
            ...s ? {
                Authorization: `JWT ${s}`
            } : {}
        },
        method: "POST",
        signal: i
    }), p = await a.json();
    return a.ok ? p : (typeof n == "function" && n(p), {
        state: e?.formState
    });
};
;
var L = ((e)=>(e.collection = "collections", e.global = "globals", e))(L || {});
function J(o, t, e) {
    return o.reduce((r, i)=>{
        if (t?.[i.type.toLowerCase()]?.[i.entity.slug]?.read.permission) {
            let s = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$utilities$2f$getTranslation$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getTranslation"])(i.entity.admin.group, e);
            if (i.entity.admin.group) {
                let a = r.find((l)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$utilities$2f$getTranslation$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getTranslation"])(l.label, e) === s), p = a;
                a || (p = {
                    entities: [],
                    label: s
                }, r.push(p)), p.entities.push(i);
            } else r.find((p)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$payloadcms$2f$translations$2f$dist$2f$utilities$2f$getTranslation$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getTranslation"])(p.label, e) === e.t(`general:${i.type}`)).entities.push(i);
        }
        return r;
    }, [
        {
            entities: [],
            label: e.t("general:collections")
        },
        {
            entities: [],
            label: e.t("general:globals")
        }
    ]).filter((r)=>r.entities.length > 0);
}
var K = ({ adminRoute: o, router: t })=>{
    let e = C({
        adminRoute: o,
        path: "/"
    });
    t.push(e);
};
var Q = ({ adminRoute: o, collectionSlug: t, router: e })=>{
    let n = C({
        adminRoute: o,
        path: t ? `/collections/${t}` : "/"
    });
    e.push(n);
};
var Y = (o, t, e, n, r, i, s, a, p, l)=>{
    if (p) try {
        i(o, t ?? e, n), r || (a.current.hasShownLockedModal = !0), a.current = {
            hasShownLockedModal: a.current?.hasShownLockedModal,
            isLocked: !0,
            user: n
        }, s(n), r && l && l(!1);
    } catch (m) {
        console.error("Error during document takeover:", m);
    }
};
var _ = (o)=>{
    let { collectionSlug: t, docPermissions: e, globalSlug: n, isEditing: r } = o;
    return t ? !!(r && e?.update?.permission || !r && e?.create?.permission) : n ? !!e?.update?.permission : !1;
};
var X = ({ id: o, collectionSlug: t, globalSlug: e })=>!!(e || t && o);
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@payloadcms/richtext-lexical/node_modules/@lexical/react/LexicalDecoratorBlockNode.dev.mjs [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */ __turbopack_esm__({
    "$isDecoratorBlockNode": (()=>$isDecoratorBlockNode),
    "DecoratorBlockNode": (()=>DecoratorBlockNode)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lexical$2f$Lexical$2e$dev$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/lexical/Lexical.dev.mjs [app-route] (ecmascript)");
;
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */ class DecoratorBlockNode extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lexical$2f$Lexical$2e$dev$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DecoratorNode"] {
    constructor(format, key){
        super(key);
        this.__format = format || '';
    }
    exportJSON() {
        return {
            format: this.__format || '',
            type: 'decorator-block',
            version: 1
        };
    }
    canIndent() {
        return false;
    }
    createDOM() {
        return document.createElement('div');
    }
    updateDOM() {
        return false;
    }
    setFormat(format) {
        const self = this.getWritable();
        self.__format = format;
    }
    isInline() {
        return false;
    }
}
function $isDecoratorBlockNode(node) {
    return node instanceof DecoratorBlockNode;
}
;
}}),

};

//# sourceMappingURL=node_modules_%40payloadcms_b51600._.js.map